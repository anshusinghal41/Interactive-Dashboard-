<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.22.0108.1053                               -->
<workbook original-version='18.1' source-build='2021.1.11 (20211.22.0108.1053)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='percentile' datatype='real' datatype-customized='true' default-format='*0.00%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.2'>
        <calculation class='tableau' formula='0.2' />
        <range granularity='0.05' max='1.0' min='0.0' />
      </column>
      <column caption='Top N WHO region' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='3'>
        <calculation class='tableau' formula='3' />
        <range granularity='1' max='7' min='1' />
      </column>
    </datasource>
    <datasource caption='Data-set-1+' inline='true' name='federated.1prfgke119gruz18zn1r70iy55ya' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data-set-1' name='textscan.05z9cp2136et7419wyf3t1lw2vr6'>
            <connection class='textscan' directory='G:/@n$#U/Data Analyst/Tablaeu/Projects/Project 1-Covid' filename='Data-set-1.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.05z9cp2136et7419wyf3t1lw2vr6' name='Data-set-1.csv' table='[Data-set-1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Confirmed' ordinal='2' />
            <column datatype='real' name='Deaths' ordinal='3' />
            <column datatype='real' name='Mortality Ratio' ordinal='4' />
            <column datatype='real' name='Latitude' ordinal='5' />
            <column datatype='real' name='Longitude' ordinal='6' />
            <column datatype='string' name='Country_Code' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.05z9cp2136et7419wyf3t1lw2vr6' name='Data-set-1.csv' table='[Data-set-1#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='real' name='Confirmed' ordinal='2' />
              <column datatype='real' name='Deaths' ordinal='3' />
              <column datatype='real' name='Mortality Ratio' ordinal='4' />
              <column datatype='real' name='Latitude' ordinal='5' />
              <column datatype='real' name='Longitude' ordinal='6' />
              <column datatype='string' name='Country_Code' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.05z9cp2136et7419wyf3t1lw2vr6' name='Data-set-2.csv' table='[Data-set-2#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='date' name='Date_reported' ordinal='0' />
              <column datatype='string' name='Country_code' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='WHO_region' ordinal='3' />
              <column datatype='integer' name='New_cases' ordinal='4' />
              <column datatype='integer' name='Cumulative_cases' ordinal='5' />
              <column datatype='integer' name='New_deaths' ordinal='6' />
              <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Confirmed]' value='[Data-set-1.csv].[Confirmed]' />
          <map key='[Country (Data-set-2.csv)]' value='[Data-set-2.csv].[Country]' />
          <map key='[Country]' value='[Data-set-1.csv].[Country]' />
          <map key='[Country_Code]' value='[Data-set-1.csv].[Country_Code]' />
          <map key='[Country_code]' value='[Data-set-2.csv].[Country_code]' />
          <map key='[Cumulative_cases]' value='[Data-set-2.csv].[Cumulative_cases]' />
          <map key='[Cumulative_deaths]' value='[Data-set-2.csv].[Cumulative_deaths]' />
          <map key='[Date_reported]' value='[Data-set-2.csv].[Date_reported]' />
          <map key='[Deaths]' value='[Data-set-1.csv].[Deaths]' />
          <map key='[F1]' value='[Data-set-1.csv].[F1]' />
          <map key='[Latitude]' value='[Data-set-1.csv].[Latitude]' />
          <map key='[Longitude]' value='[Data-set-1.csv].[Longitude]' />
          <map key='[Mortality Ratio]' value='[Data-set-1.csv].[Mortality Ratio]' />
          <map key='[New_cases]' value='[Data-set-2.csv].[New_cases]' />
          <map key='[New_deaths]' value='[Data-set-2.csv].[New_deaths]' />
          <map key='[WHO_region]' value='[Data-set-2.csv].[WHO_region]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data-set-1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data-set-2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Data-set-1.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-1.csv_D6D83C90A02D465AA67FA8A556B753E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Data-set-1.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-1.csv_D6D83C90A02D465AA67FA8A556B753E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[Data-set-1.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-1.csv_D6D83C90A02D465AA67FA8A556B753E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Data-set-1.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-1.csv_D6D83C90A02D465AA67FA8A556B753E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality Ratio]</local-name>
            <parent-name>[Data-set-1.csv]</parent-name>
            <remote-alias>Mortality Ratio</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-1.csv_D6D83C90A02D465AA67FA8A556B753E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Data-set-1.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-1.csv_D6D83C90A02D465AA67FA8A556B753E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Data-set-1.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-1.csv_D6D83C90A02D465AA67FA8A556B753E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Code]</local-name>
            <parent-name>[Data-set-1.csv]</parent-name>
            <remote-alias>Country_Code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-1.csv_D6D83C90A02D465AA67FA8A556B753E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_reported</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date_reported]</local-name>
            <parent-name>[Data-set-2.csv]</parent-name>
            <remote-alias>Date_reported</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-2.csv_9C543857BC5F48D18F060F4DF980A42F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_code]</local-name>
            <parent-name>[Data-set-2.csv]</parent-name>
            <remote-alias>Country_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-2.csv_9C543857BC5F48D18F060F4DF980A42F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Data-set-2.csv)]</local-name>
            <parent-name>[Data-set-2.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-2.csv_9C543857BC5F48D18F060F4DF980A42F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO_region]</local-name>
            <parent-name>[Data-set-2.csv]</parent-name>
            <remote-alias>WHO_region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-2.csv_9C543857BC5F48D18F060F4DF980A42F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New_cases]</local-name>
            <parent-name>[Data-set-2.csv]</parent-name>
            <remote-alias>New_cases</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-2.csv_9C543857BC5F48D18F060F4DF980A42F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_cases]</local-name>
            <parent-name>[Data-set-2.csv]</parent-name>
            <remote-alias>Cumulative_cases</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-2.csv_9C543857BC5F48D18F060F4DF980A42F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New_deaths]</local-name>
            <parent-name>[Data-set-2.csv]</parent-name>
            <remote-alias>New_deaths</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-2.csv_9C543857BC5F48D18F060F4DF980A42F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_deaths]</local-name>
            <parent-name>[Data-set-2.csv]</parent-name>
            <remote-alias>Cumulative_deaths</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data-set-2.csv_9C543857BC5F48D18F060F4DF980A42F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='percentile confirmed' datatype='string' name='[Calculation_868068884519092224]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF RANK_PERCENTILE(SUM([Confirmed]))&gt;[Parameters].[Parameter 1] THEN &quot;High&quot; ELSE &quot;Low&quot; END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='new cases vs new deaths' datatype='real' name='[Calculation_868068884746596353]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[New_cases]/[New_deaths]' />
      </column>
      <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country (Data-set-2.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[Country_Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country code' datatype='string' name='[Country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
      <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
      <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='real' name='[Mortality Ratio]' role='measure' type='quantitative' />
      <column caption='New cases' datatype='integer' name='[New_cases]' role='measure' type='quantitative' />
      <column caption='New deaths' datatype='integer' name='[New_deaths]' role='measure' type='quantitative' />
      <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Data-set-1.csv' datatype='table' name='[__tableau_internal_object_id__].[Data-set-1.csv_D6D83C90A02D465AA67FA8A556B753E2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Data-set-2.csv' datatype='table' name='[__tableau_internal_object_id__].[Data-set-2.csv_9C543857BC5F48D18F060F4DF980A42F]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Data-set-1.csv_D6D83C90A02D465AA67FA8A556B753E2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Data-set-1.csv_D6D83C90A02D465AA67FA8A556B753E2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Data-set-2.csv_9C543857BC5F48D18F060F4DF980A42F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Data-set-2.csv_9C543857BC5F48D18F060F4DF980A42F:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Attribute' name='[attr:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Attribute' name='[attr:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_cases]' derivation='Avg' name='[avg:Cumulative_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[pcrk:sum:Confirmed:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Deaths]' derivation='Sum' name='[pcrk:sum:Deaths:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Cumulative_cases]' derivation='Avg' name='[pcto:avg:Cumulative_cases:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Cumulative_cases]' derivation='Sum' name='[pcto:sum:Cumulative_cases:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_868068884746596353]' derivation='Sum' name='[sum:Calculation_868068884746596353:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mortality Ratio]' derivation='Sum' name='[sum:Mortality Ratio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:WHO_region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AFRO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SEARO&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;EURO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EMRO&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;WPRO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AMRO&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[avg:Longitude:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[avg:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[pcto:avg:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[pcto:sum:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[pcrk:sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Mortality Ratio:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[__tableau_internal_object_id__].[cnt:Data-set-1.csv_D6D83C90A02D465AA67FA8A556B753E2:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Calculation_868068884746596353:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[attr:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[pcrk:sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[avg:Latitude:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[attr:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[__tableau_internal_object_id__].[cnt:Data-set-2.csv_9C543857BC5F48D18F060F4DF980A42F:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='percentile' datatype='real' datatype-customized='true' default-format='*0.00%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.2'>
          <calculation class='tableau' formula='0.2' />
          <range granularity='0.05' max='1.0' min='0.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data-set-1.csv' id='Data-set-1.csv_D6D83C90A02D465AA67FA8A556B753E2'>
            <properties context=''>
              <relation connection='textscan.05z9cp2136et7419wyf3t1lw2vr6' name='Data-set-1.csv' table='[Data-set-1#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='Confirmed' ordinal='2' />
                  <column datatype='real' name='Deaths' ordinal='3' />
                  <column datatype='real' name='Mortality Ratio' ordinal='4' />
                  <column datatype='real' name='Latitude' ordinal='5' />
                  <column datatype='real' name='Longitude' ordinal='6' />
                  <column datatype='string' name='Country_Code' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Data-set-2.csv' id='Data-set-2.csv_9C543857BC5F48D18F060F4DF980A42F'>
            <properties context=''>
              <relation connection='textscan.05z9cp2136et7419wyf3t1lw2vr6' name='Data-set-2.csv' table='[Data-set-2#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='Date_reported' ordinal='0' />
                  <column datatype='string' name='Country_code' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='WHO_region' ordinal='3' />
                  <column datatype='integer' name='New_cases' ordinal='4' />
                  <column datatype='integer' name='Cumulative_cases' ordinal='5' />
                  <column datatype='integer' name='New_deaths' ordinal='6' />
                  <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (Data-set-2.csv)]' />
            </expression>
            <first-end-point object-id='Data-set-1.csv_D6D83C90A02D465AA67FA8A556B753E2' />
            <second-end-point object-id='Data-set-2.csv_9C543857BC5F48D18F060F4DF980A42F' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='1  Confirmed VS Death'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</column>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1prfgke119gruz18zn1r70iy55ya].[Multiple Values]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' />
              <text column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' />
              <lod column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' />
              <size column='[federated.1prfgke119gruz18zn1r70iy55ya].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1prfgke119gruz18zn1r70iy55ya].[Latitude (generated)]</rows>
        <cols>[federated.1prfgke119gruz18zn1r70iy55ya].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{94B08930-7CA0-4480-BD86-DB67ED763261}' />
    </worksheet>
    <worksheet name='2 Top 5 countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
          </datasources>
          <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([Confirmed])+SUM([Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</column>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Deaths:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Confirmed:qk]' scope='rows' value='Confirmed and deaths' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1prfgke119gruz18zn1r70iy55ya].[Multiple Values]</rows>
        <cols>([federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk] / [federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{3922E9D1-2A80-4E60-8380-0A3DEDED4137}' />
    </worksheet>
    <worksheet name='3 percentile comparison'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
          </datasources>
          <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[pcrk:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
            </column-instance>
            <column-instance column='[Deaths]' derivation='Sum' name='[pcrk:sum:Deaths:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
            </column-instance>
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[pcrk:sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[pcrk:sum:Confirmed:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[pcrk:sum:Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Confirmed:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' value='173' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' />
              <text column='[federated.1prfgke119gruz18zn1r70iy55ya].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</rows>
        <cols>[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C1C69110-1706-4129-B322-8C0D5FCEB043}' />
    </worksheet>
    <worksheet name='5 India-China New cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
          </datasources>
          <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New cases' datatype='integer' name='[New_cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' />
              <text column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1prfgke119gruz18zn1r70iy55ya].[sum:New_cases:qk]</rows>
        <cols>[federated.1prfgke119gruz18zn1r70iy55ya].[tdy:Date_reported:qk]</cols>
      </table>
      <simple-id uuid='{6BE5DD91-A5A5-4A8B-AC72-C6AE394DA738}' />
    </worksheet>
    <worksheet name='6 Highest death cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
          </datasources>
          <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New deaths' datatype='integer' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Day' name='[dy:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date_reported]' derivation='Month' name='[mn:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date_reported]' derivation='Quarter' name='[qr:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Year' name='[yr:Date_reported:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1prfgke119gruz18zn1r70iy55ya].[dy:Date_reported:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:New_deaths:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:New_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1prfgke119gruz18zn1r70iy55ya].[yr:Date_reported:ok] / ([federated.1prfgke119gruz18zn1r70iy55ya].[qr:Date_reported:ok] / ([federated.1prfgke119gruz18zn1r70iy55ya].[mn:Date_reported:ok] / [federated.1prfgke119gruz18zn1r70iy55ya].[dy:Date_reported:ok])))</rows>
        <cols />
      </table>
      <simple-id uuid='{0D8D428B-FE5A-4E8E-AEF2-5A7045D4C1BD}' />
    </worksheet>
    <worksheet name='7 WHO region'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
            <column caption='new cases vs new deaths' datatype='real' name='[Calculation_868068884746596353]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[New_cases]/[New_deaths]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New cases' datatype='integer' name='[New_cases]' role='measure' type='quantitative' />
            <column caption='New deaths' datatype='integer' name='[New_deaths]' role='measure' type='quantitative' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_868068884746596353]' derivation='Sum' name='[sum:Calculation_868068884746596353:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]'>
            <groupfilter function='level-members' level='[none:WHO_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' />
              <size column='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Calculation_868068884746596353:qk]' />
              <lod column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1prfgke119gruz18zn1r70iy55ya].[Latitude (generated)]</rows>
        <cols>[federated.1prfgke119gruz18zn1r70iy55ya].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5F19C49D-2D65-4E00-93E1-3FB6224A099E}' />
    </worksheet>
    <worksheet name='8 Top N WHO region'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N WHO region' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
              <range granularity='1' max='7' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
            <column caption='new cases vs new deaths' datatype='real' name='[Calculation_868068884746596353]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[New_cases]/[New_deaths]' />
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='New cases' datatype='integer' name='[New_cases]' role='measure' type='quantitative' />
            <column caption='New deaths' datatype='integer' name='[New_deaths]' role='measure' type='quantitative' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_868068884746596353]' derivation='Sum' name='[sum:Calculation_868068884746596353:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([Cumulative_cases])/SUM([Cumulative_deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;AFRO&quot;' function='range' level='[none:WHO_region:nk]' to='&quot;EURO&quot;' />
                  <groupfilter function='member' level='[none:WHO_region:nk]' member='&quot;SEARO&quot;' />
                  <groupfilter function='member' level='[none:WHO_region:nk]' member='&quot;WPRO&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' />
              <size column='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Calculation_868068884746596353:qk]' />
              <text column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' />
              <text column='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Calculation_868068884746596353:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{366FC4F1-56B3-4513-8856-4BB627D31F72}' />
    </worksheet>
    <worksheet name='9 AVG region wise'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
          </datasources>
          <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal' />
            <column-instance column='[Cumulative_cases]' derivation='Avg' name='[avg:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cumulative_cases]' derivation='Avg' name='[pcto:avg:Cumulative_cases:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' direction='DESC' using='[federated.1prfgke119gruz18zn1r70iy55ya].[avg:Cumulative_cases:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' />
              <size column='[federated.1prfgke119gruz18zn1r70iy55ya].[avg:Cumulative_cases:qk]' />
              <text column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' />
              <text column='[federated.1prfgke119gruz18zn1r70iy55ya].[pcto:avg:Cumulative_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1prfgke119gruz18zn1r70iy55ya].[avg:Cumulative_cases:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{A824D00E-9A68-45C6-823A-235A7A35E251}' />
    </worksheet>
    <worksheet name='Bar chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
          </datasources>
          <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:WHO_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_deaths:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_cases:qk] + [federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_deaths:qk])</rows>
        <cols>[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]</cols>
      </table>
      <simple-id uuid='{CAB9AC0B-AEE2-4A39-9FEF-7EAC25A60E52}' />
    </worksheet>
    <worksheet name='Line chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
          </datasources>
          <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:WHO_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_deaths:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_cases:qk] + [federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_deaths:qk])</rows>
        <cols>[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]</cols>
      </table>
      <simple-id uuid='{B5E914B9-CA75-443B-B720-4068D215D73B}' />
    </worksheet>
    <worksheet name='Top 5 countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
          </datasources>
          <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM([Deaths])+SUM([Confirmed])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</column>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' />
              <text column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1prfgke119gruz18zn1r70iy55ya].[Multiple Values]</rows>
        <cols>([federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk] / [federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{CF63CE31-3BC7-4A93-9F42-9ABABE3D5370}' />
    </worksheet>
    <worksheet name='confirmed vs death cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</column>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' />
              <size column='[federated.1prfgke119gruz18zn1r70iy55ya].[Multiple Values]' />
              <tooltip column='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Confirmed:qk]' />
              <tooltip column='[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Deaths:qk]' />
              <text column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' />
              <lod column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1prfgke119gruz18zn1r70iy55ya].[Latitude (generated)]</rows>
        <cols>[federated.1prfgke119gruz18zn1r70iy55ya].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{148B8C46-09C4-4B95-B7D6-E5671C9BC1A4}' />
    </worksheet>
    <worksheet name='logarithemic'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{15D913A5-822D-4C76-9051-6AB6D3ABC1B7}' />
    </worksheet>
    <worksheet name='map chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1prfgke119gruz18zn1r70iy55ya].[sum:Cumulative_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:WHO_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]</column>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]</column>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1prfgke119gruz18zn1r70iy55ya].[Multiple Values]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' />
              <size column='[federated.1prfgke119gruz18zn1r70iy55ya].[Multiple Values]' />
              <lod column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1prfgke119gruz18zn1r70iy55ya].[Latitude (generated)]</rows>
        <cols>[federated.1prfgke119gruz18zn1r70iy55ya].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{88895AD5-3037-44AD-AA62-8F664FB237EA}' />
    </worksheet>
    <worksheet name='parameter for percentile'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='percentile' datatype='real' datatype-customized='true' default-format='*0.00%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.2'>
              <calculation class='tableau' formula='0.2' />
              <range granularity='0.05' max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
            <column caption='percentile confirmed' datatype='string' name='[Calculation_868068884519092224]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF RANK_PERCENTILE(SUM([Confirmed]))&gt;[Parameters].[Parameter 1] THEN &quot;High&quot; ELSE &quot;Low&quot; END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[pcrk:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
            </column-instance>
            <column-instance column='[Calculation_868068884519092224]' derivation='User' name='[usr:Calculation_868068884519092224:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1prfgke119gruz18zn1r70iy55ya].[usr:Calculation_868068884519092224:nk:1]' />
              <text column='[federated.1prfgke119gruz18zn1r70iy55ya].[pcrk:sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{11B58FE7-C00B-4C2B-A5D5-A1BEE445351D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='10 Dashboard WHO region sie'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Data-set-1+' name='federated.1prfgke119gruz18zn1r70iy55ya' />
      </datasources>
      <datasource-dependencies datasource='federated.1prfgke119gruz18zn1r70iy55ya'>
        <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal' />
        <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' param='vert' type-v2='layout-flow' w='82399' x='800' y='1000'>
              <zone h='22250' id='5' name='Bar chart' w='82399' x='800' y='1000'>
                <layout-cache minheight='185' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22250' id='9' name='Line chart' w='82399' x='800' y='23250'>
                <layout-cache minheight='185' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='242' h='31250' id='10' is-fixed='true' name='map chart' w='82399' x='800' y='45500'>
                <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22250' id='109' name='5 India-China New cases' w='82399' x='800' y='76750'>
                <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83199' y='1000'>
              <zone h='8250' id='8' name='Bar chart' pane-specification-id='1' param='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' type-v2='color' w='16000' x='83199' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20750' id='11' name='map chart' pane-specification-id='1' param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' type-v2='color' w='16000' x='83199' y='9250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23000' id='12' name='Bar chart' param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' type-v2='filter' values='database' w='16000' x='83199' y='30000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8250' id='110' name='5 India-China New cases' pane-specification-id='0' param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' type-v2='color' w='16000' x='83199' y='53000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='138' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='137' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='23000' id='12' mode='checkdropdown' name='Bar chart' param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' type-v2='filter' values='database' w='16000' x='83199' y='30000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='170' h='22250' id='5' is-fixed='true' name='Bar chart' w='82399' x='800' y='1000'>
                  <layout-cache minheight='185' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='8' name='Bar chart' pane-specification-id='1' param='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' type-v2='color' w='16000' x='83199' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='170' h='22250' id='9' is-fixed='true' name='Line chart' w='82399' x='800' y='23250'>
                  <layout-cache minheight='185' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='242' h='31250' id='10' is-fixed='true' name='map chart' w='82399' x='800' y='45500'>
                  <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20750' id='11' name='map chart' pane-specification-id='1' param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' type-v2='color' w='16000' x='83199' y='9250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='170' h='22250' id='109' is-fixed='true' name='5 India-China New cases' w='82399' x='800' y='76750'>
                  <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='110' name='5 India-China New cases' pane-specification-id='0' param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' type-v2='color' w='16000' x='83199' y='53000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{622313A8-BEE4-43FA-984C-BE9784481D1A}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='confirmed vs death cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]</field>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B65EE780-94BA-4B41-B8FC-4C66512E6076}' />
    </window>
    <window class='worksheet' name='Top 5 countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]</field>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FBEA9D0F-DD4A-4F5B-BEAF-50CAFA205DEF}' />
    </window>
    <window class='worksheet' name='parameter for percentile'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1prfgke119gruz18zn1r70iy55ya].[usr:Calculation_868068884519092224:nk:1]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</field>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[usr:Calculation_868068884519092224:nk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB825C3A-718E-4D8C-8A16-EA704A93BEEC}' />
    </window>
    <window class='worksheet' name='logarithemic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A77060C1-E4EA-4674-8ACA-3F44BCDE34CB}' />
    </window>
    <window class='worksheet' name='1  Confirmed VS Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]</field>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A59B4B85-8737-41EE-BB86-E585E4A96E99}' />
    </window>
    <window class='worksheet' name='2 Top 5 countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]</field>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{DAA63BBE-DB0F-4A96-B4DE-0DFAAD03D70C}' />
    </window>
    <window class='worksheet' maximized='true' name='3 percentile comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]</field>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBC2E8E6-64BC-4886-A2A5-3CE768B52DAF}' />
    </window>
    <window class='worksheet' name='5 India-China New cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</field>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED32BDFC-4EF1-4702-9BB4-34448E7271CD}' />
    </window>
    <window class='worksheet' name='6 Highest death cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{343D0F96-7535-4934-B308-C5F37E27165D}' />
    </window>
    <window class='worksheet' name='7 WHO region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</field>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B88195E-E355-4494-B222-690355924F8D}' />
    </window>
    <window class='worksheet' name='8 Top N WHO region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A57E75B6-FED0-493A-9562-1A674B4D2F84}' />
    </window>
    <window class='worksheet' name='9 AVG region wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1prfgke119gruz18zn1r70iy55ya].[avg:Cumulative_cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6FF6AD3E-987A-4154-8C8E-85D34BC2CC1C}' />
    </window>
    <window class='worksheet' name='Bar chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2FDE9536-B943-4C04-865D-CE155D0830AC}' />
    </window>
    <window class='worksheet' name='Line chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1prfgke119gruz18zn1r70iy55ya].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{871EEF47-AFF0-4931-83E2-C6FD949BAADB}' />
    </window>
    <window class='worksheet' name='map chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</field>
            <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3960CD5-2584-4859-8F5D-0C102C3E71F6}' />
    </window>
    <window class='dashboard' name='10 Dashboard WHO region sie'>
      <viewpoints>
        <viewpoint name='5 India-China New cases'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Bar chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Line chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map chart'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1prfgke119gruz18zn1r70iy55ya].[none:WHO_region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{84139D67-1F32-4D0F-B6A9-A6922B24056B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1  Confirmed VS Death' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='10 Dashboard WHO region sie' width='192'>
      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
      NQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='2 Top 5 countries' width='192'>
      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
      xWDFZpL4/4A/ZjrfJoaBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='3 percentile comparison' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='5 India-China New cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='6 Highest death cases' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='7 WHO region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='8 Top N WHO region' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAdLElEQVR4nO3dd3gc933n8fe0rcBigUUHSJAgQLBXiU1d51iimiVSduQnzY5tlTs79rnE
      ke3Hse+Si+3Ej1N8F/uScz1bliVfbEuyVUjFVCMpsVeQAAGS6L0tts3OzP2BqEAASJTdnS2/
      1/PoeQQsdua7D+ez85uZX5Esy7IQhBwl212AINhJBEDIaSIAQk4TARBymgiAkNNEAIScJgIg
      5DQRACGniQAIOU0EQMhpIgBCThMBEHKaCICQ00QAhJwmAiDkNBEAIaeJAAg5TQRAyGkiAEJO
      EwEQcpoIgJDTRACEnCYCIOQ0EQAhp4kACDlNBEDIaSIAQk4TARBymgiAkNNEAIScptpdgJBa
      lmliRaOYY0GMsVGMkRHM0TGMkRGsSGTiP8PAisaQNA1JVZBcLiS3GyU/H6XQj1LgR87zIufn
      I7vddn+kBREByHJWPE58YIDo2Ub09nb0tnbivb2YwSBmKASGMfeNShJyXh5yfh5KURGORYvQ
      ampw1tejVVUm/kMkkSQWyMgulmFgDAwSPX+O0BuHiZ0/jzE6Or8Dfa4UBaWgAOeKFbg3rMfR
      sBy1qAhJ05K/73kSAcgClmVh9PURPnGS0IEDxFpasUIhu8sCTcNZuxTXpk0TgaipsbuiKUQA
      MpRlWViRCJHTpwnufZFo4zmscNjusmYkuVy41q7Bs20b7s2bkJxOJEmyuywRgEwU7+9n/KWX
      GX/pZeLd3XaXM2dqeTmerVvw3noLWlmZrbWIAGQIy7Iwx8YIvrCHsedfwBwZsbukBZN9Prw7
      dpB/910oRYW2nBFEADKAMTzM2At7CD77HOb4uN3lJJzkdpN/23vJv+02lEJ/avctApC+LMMg
      /MYhhp94gnhHp93lJJ1aVkrB7t14tm9L2Z0jEYA0ZJkmens7wz/9GZETJ8A07S4pdSQJ54oG
      Cj/0J2iLFiHJye2sIAKQZsxolOCevYw8+Yu0vquTbJLbje+eu8nfeTuyy5W8/YgApAfLsjBH
      Rhj83g8Iv/EGiH8WAJwrV1L08EOopSVJuUgWAUgTsUuX6PvG32EMDNhdStqR/X4K/+SP8G7f
      nvBtiwCkgVjrRQb+5/9Cb2+3u5T0pWn47r6Lgl33IamJ68ImAmAjy7IIHz7M4Hf/BXNszO5y
      MoJ7y7UEHn4I2eNJyPZEAGxiWRbBF/Yw/NjPcvpidz5cG9YTePghFP/CnxmIANjAMgzGnn6G
      4cd/nlu3OBNIW7qE4v/6KbTS0gVtRwQgxSzDYPSppxl54snUdFHOYtqiRRR/+lNoFRXz3oYY
      EplClmky9vQz4uBPEL2tjf5v/T3x3t55b0MEIEUsyyL43PMTzR5x8CeMfrmNvm9+C3N8fuMf
      RABSJHzoEMM/e1y0+ZNAv3SJ/m9/e2KI5xyJAKRArLWVgX/+LlY0ancpWSty9BjDP30MKx6f
      0/vSZlB8JBZnaCzMcDDCeFgnFjeI6gZOTUGRJVwOlXyPE5/HSaDAnRajiWYj3tdH/z9+Oz2G
      KGa54J69qJWV+O7YOev3pDwAlmUR0w26B4OcvdRPc8cgrV3D9AwFicdNdMPEMM0pXWFkWUKV
      ZVRFJs/joCKQR11VEQ2LAqxYXEye24GipNcJzYrFGPrhj4h3ddldSs4Y+fkTOBYvwrVmzaz+
      PmW3QaN6nJbOIV492cbJlh4u94xiJmjXHqdGw+IAW1ZWsW5ZGdUlvoRsdyEs02T0l79i5OdP
      2F1KzlErKyj90hdRi4qu+rdJDYBlWYyOR3nxaCv/fvQiHX1jxI3kXgTmuR1cu6KSmzbUsH5Z
      ObKc+qaSZVlEGxvp+8bfiae8NnFv3ULxpz551aZyUgJgWRb9IyFeeKOFZw40EQzHEr2LWamv
      LmLXjSu5ZkUlDlVJ2X6NsTF6//tfo1++nLJ9Cu8iyxQ9+DHybr7pin+W8AAYhsmT+87y7MEm
      Bsciidz0vMiSxNraUv70jo0sqUjNeNOhn/yUsaeeTsm+hJkpxcWUfflLqFfoLpGwAJiWxdmL
      ffzwueOcu5x+fdqdDoXbrq3j/Tevwud1Jm0/sdZWev7yq1gxe856wmTeW28h8ODHZnw9IQEI
      RXSeeu08v3y5kVBUX+jmkqqmrIBP7N5CfXUg4ds2o1H6v/mtiXG8QnqQJEq/9EVcq1dN+/KC
      7xsOjYX5+k9f5bG9J9P+4Ae41DPCl7/3O357sBkjgU9lLcsicvQYkVOnErZNIQEsi5EnnsCc
      4Yw87wBYlsWFjkH+/Dt7ONbcnVFDWEMRne/++hD/55mj6PEE9cuJxxl+4knR1SENRc83TYyz
      nsa8A3CypZevP/YqvUOZOVGTZcEz+5v4518eIqrP7fH5dMb3HyDe0ZGAyoSEM01G/+2XWPrU
      FsqcA2BZFkfOd/E3P3mFnsHMPPjfae+RVv7xyYOEF9B8M0MhRn/9VAKrEhJNb+8gdODglN/P
      OQDn2gb4p18cJBRJ//b+bL1yso1/fXr+zaHQwdfFt38GGHv++SlngTkFoHswyN8+9lpa3N9P
      tD2HW/jx8ycwzbldzJixGMEXXhDz+GSAWOtFImfOTvrdrAMwEozwD08epH8ke3s1Pv3aefYc
      bpnTe2IXWoi1tCapIiGh4nGCzz2P9Y4BSbMKgGGYPLb3FGcu9iWttnRgmBbf/+0xmjsGZ/X3
      lmUR3Ls3yVUJiRQ5dYp4z9tDKGcVgP2n23nujQtJKyqdhCI63/nVIcYjV3+SawwMEj56NAVV
      CYlixWKMv/baWz9fNQCDo2F+9NzxObeNM1lT+yBPvXqeqz0kj5w6hTXPsaiCfcIHX3+rGXTF
      ABiGyeMvnqYnQ+/1L8S/vdxI10BwxtctwyB04EAKKxISRe/qInbxInCVAFzsGWbf8YspKCn9
      RGJxfvjszGc+Y3CQ6PmmFFclJEQ8TvjwEeAKAbAsi588f5JwdOFPSTPVkfNdnGzpmfa1yJkz
      YpxvBoscPYYZjc4cgJbOIY405fZY1ljc4On9TdOOYoscPWZDRUKixNraiPf2TR8Ay7L47cFm
      8WwHOHyuk0vdw5N+Z8XjovmT6eJx9Iut0wegayDIgTNirnqYeDbwmwPNk36nd3VhZMEypbku
      fPzE9AE43tzNWEiMaHrTkaYuxt8xrjl6tlFMb5gFomcbpwbAMExeOiEGc7/T8FiE4xfevhiO
      NonmTzYwBgamBqB/JMT5tvQb02sn07I4fL4L07KwdJ14Z27fHMgmUwJw6Fxn0ufuyUQnL/QQ
      DMcwwxGM0VG7yxESZEoAzl7qt6OOtNczNE7PYBBzdBRTXABnjUkBiOmGaP5cQXP7IPGhQTHl
      SRaZFIChYJjxLBrplWjNnUMYvdndJTzXTJoduqs/mFVDHROtrXeEuCna/9lkUgB6hsYTNmPz
      XC2rKqSmzM+LR1q5e8dyYnGD48093LyxhnA0zoHT7VSV5FMZyGc8orPv2KWU13q5ZwRDya72
      v/vaa1CKitDb2lEDAfSebvRLl/F/8AFGn34G7/XXYcVihA4cxLGsFiUQwBwZIbQ/O3rCTgrA
      wKh9nbv8XhfhqI6myER1g77hcaJ6nOPNPQyPRQgUuNEUhaf3N7F6SQkFeU6GUjw2OaYbBAeG
      yIylOWbJNDH6BzDHxohLoAYCWKEwxtAQAOGjx7BiMdTSUqy4QfDZ53Bv3oTkcGTFtdCka4CR
      oD1L+LidKmtqS6mtLKSm3M9YOEpb7ygx3eDaFVXcsmkJl7pHkCQJSQJVkW0ZoGNZFsOD2dUE
      snQdvaNj4oA3LcxIBLWslHhfH5Ik4dm6Bc+O7cQuXUJ6cwESWbnqYKFMMekMEJzFMMBk8Loc
      7DnUQt9IiLqqIvqHQ/SPhNBUmZeOXyISi1Pi9zI0Fmbn1noGRkKMjNsQVssiHI5SmPo9J5Vr
      3Tr09nbM0DhmTw+O+jqMgUHMWIzxl14GWUYpKsIMhcm77b3Eu7phmkmmMtGkyXH/6kcv8UZj
      p531pDXJsvhk92ssC4tbxdkivRbVEoQUmxQAp5Y2i0amJUkCl8thdxlCAk064l2O1C0j9KZr
      VlRSUuDhjcZONi2vQJElDp3rpG84RGVxPhvqytDjJl0DYywu89M3PE4oorOk3E/XYJAj51PZ
      MU3C4XHDUAp3mQyqivf669DbO9AvXcJ74w1Yuk70fBOu9euwIhHGX9sPuo5r/TrUigriHZ3I
      +XkoPh/Rlla0igokl4vIsWPEe6YfNpoJJp0BCvJcKd25psoU+9y09Y4SDMdwqAqtXcNv3d7s
      7B9j37FL9I+EyHM76R4MUhnIJ8/teOv/U3lLUpIl/MWpWWYpqf5jULgVj6MEAljxOHpHB5LT
      OTHQR5ZR/BOfM3L8BJFjxzAjYSzDIN7bC5aJpCrEe7pxLF1q84dZmEkBCPjcKS8gEosTiuis
      W1bGgTPtSBKsWFwMTKz4WFddxOmLfRw+10ln/xhRPc7R5m46+sfQ4wapvBmnqQr+4iy7B2RZ
      GGNjyB4vALHmZqxI5K0BP9qiRUhu91vTP8YHB5E9HkIHX8cYHsGKZ/bdoElNoNJCb0p3rsdN
      BkbDrKgJcO7yACtrivF5nRw538XqJSVoqkJ1ST4FXietXcOsW1ZGS8cQpX4vG+rKOJfijnul
      fi9KfuaPBJOcTjw7tk8cyK/tR/Z4kF0u9J5uXGvXYkUiWHoMbUkNzro6kGRktxtMC+fyBmKt
      LTjqlqFVVDD+yqt2f5wFmXQb9GL3MJ//zh4iMXunQlEVmdJCL539Y7bW8W7XrVnEI4Fxhr7/
      A7tLSTqlpARzdBQras/D0VSZdAYoK/SS53bYHoC4YabdwQ9QW1WI6vPYXUZKGH250et10jWA
      26nRsDjxqydmA0WWWFVTglpSguQQt0KzxZQHYVtXVtlRR9qrLM6nptyPXFDw1h0SIfNNCcC6
      ZWU41NQ/D0h3a2vL8Lo0lPx81LIyu8sREmRKAHxeJ6uWlNhRS9pSZGnSmVGrFmfJrKAoUwOg
      yDI3rFtsRzlpq8TvnfSl4GxosLEaIVG0qqrpO8NtWVlFqT+1zwTS2U0banBobzcLtZrFoIhm
      YqZzrV0zfQB8XifbV1enup605HKo3Lpp8uN+tbwctazUpoqERHGuaJi5O/Sd2+txauJb7qYN
      NVOekEuShGvNWpsqEhJB9npxLFkycwDKivKmfPPlGo9LY+fWemRpapc7Z8NyGyoSEkWtrkLx
      +688IOae6xrI9+TuQ5+bNyxhacX09/xda1Yj+wtSXJGQKJ5rrkHStCsHoCKQx/uuy807Hj6P
      k103rpjxdTk/H+dycRbISJqGa91EE/aKAZAkiXuub2B5dW51j5AliQ/tXE9xwcz9fiRZxrNt
      28QwMSGjOJbUoC2euNV/1THBTk3lwXs24XbmznDJbauruGF9DdJVDm7XmtUohVk2PiAHeLZv
      f+vfdlaD4uuqiviD96yd9mIw2xQXePjonZtm1R1E8fkmzgJCxpB9Prw7drz982zeJEkSO7fV
      c+P6mqQVlg7cTpWP77qWwBWaPu/mvfF68VAsg7g3rEf25b/186ynRVEVmYfu2UxdVVFSCrOb
      qsh86PYNrF9WPqf3adXVuNasSVJVQiJJDgd573kPkvz2YT+neYE8Lo3PPbCDmrLsuv0nSfD7
      t67m9q11yPLcmnmSquK7605Qc+caKVM5V67Asax20u/mPDFWeSCPL/zhDVQG8hJWmJ0kCe7e
      sZzdN62c9zacKxpw1NZe/Q8F+8gy+TtvR3pXc3VeM8OVB/L4yodvZml5Zg8M0VSZB25dw4fv
      2Igiz3+SPEnTKNh9n7glmsZcq1dN21SdNCh+rgZHw/zTLw5ypKl7QcXZwe1U+fAdG7nt2mUA
      jEZGGAwNMBgaIBQLYZgGsiTh1jzkOfMJeIsp8gRQ5OkveC3Lou+v/4bIqVOp/BjCLEiaRvHn
      PoN73bqpry0kAADhaJyfvHCC3xxowrBhyvL5KPV7eGTXelTPEEfbD3Gu9wx9wR50Q0c3dKx3
      zTakyCoORcOteVhbsYG6kuVsrL4Gv8uP/I5ARM6coe9r38iKefOziWfHDgL/5ZEpzR9IQAAA
      TNPitdNtfP83x+gfsW+RjatRFYnaGoVFtb20DJ+gNzj/M5dDcbB50VZuqruVVWVrURUVyzAY
      /Jd/Zfx3+xJYtbAQkstF+f/4K7TKyulfT0QA4D+aAMMhfvTccV492WbbUkvTs5DUMAVVTch5
      l4gaiQupLMnUl6zg/vUfZFX5GozBQbof/SKmWEs4LRS8/34Kdu+a8fWEBeCdTrb08KPnTtDc
      Pmh7ENxOBYf/IkbBYSw5uUsq3Vz3HnavfwDH/uMMfe/7YIoFx+3kqF1KyRceRcmb+Y5lUgIA
      E3N+Hmrs5Ml9Z2jtGk7GLq7IoSlsXulnWHuNttCxlC3pU+mr5uEtj+D78TNEjh5LyT6FqSSn
      k+LPfhr32isPXEpaAGCiWWSYFidbeth37BJHzncldWkjTZUpL8rj965ZRv0SjR8c/nvaRy4n
      bX8zcWse/rh2F7Xf34s1nF2rSmYK3333UvCB91+1Q2NSA/Buw8EIhxo7OXGhh8bL/fQMjS94
      my6HSlVxPhvqy7mmoZK6qiI6Ri/yD/v+dkEXuQulyRp3R+vZsveyaAqlmHNFAyWf//OJCX2v
      IqUBeJNlWYxHdDr7x2i83M+l7mE6+sfoGggS1eOYpjXp2kGSJGRJQlNkfHlOygrzWFrup35R
      gNrKQvxeJ07HRFeE3mAPX9/zVbpG7V/rTJUU7mv0sOlCHCm7FldNW0ogQMmjn8dRPbtJHWwJ
      wEwsyyIcjROO6oyF376X7lAVPE6NfI8DRZn5iW0wGuRre75Cy0BzKsqdFZcOf3DESf2A6DGa
      bBMPvD6Le93sJyxIqwAshGmafO/gd3ix6Xm7S5nCH5b4zPFStMH0m/E6a0gSBb//AXzvu+eq
      7f53yopVIi3L4o22A+xr3mt3KdMadlv8cquGVOCzu5TsJMvk33UnvrvunNPBD1kSgGg8yuNH
      /i+Glb6rt5xUe+m5/0Zkr5hxL9E827ZSsHsX0jy6pGdFAF5sep7uMfsveq8kZsR4Kn6c/Ic/
      gnyFBzPC3Hh27KDoYx9Fds1vgceMD8B4NMjzjc/YXcasNPWd40K5QtEjDyHn51/9DcIVeXZs
      p+jBj87qdudMMj4AR9oP0RfstbuMWdt3YS/uTRspeuRhJE9uLLeUcJKEZ9vWBX3zvymjA2CY
      BgcuvjKl+3I6O9F5jI6RdjybNlLyuc+gFBfbXVJmkSTyb3svRQ8/tKBv/jdldABGIsOc6z1j
      dxlzEo1HONd7FgDXypWUfuEvUMvFijOzoigUfOB+/H/8Rwv+5n9TRgfgTPdJQnr6jj+YycnO
      tzvnaZWVlP23r+LasN7mqtKbUlhI8Z99At+9906a1WGhMnoqgwv9TQt6/4aqzRR7SzjdfZJl
      gXpcmouzPafpH+9jx5Ib+F3zHhrKVrG4sIb+YB8nOo9y3dKbcKhODl0+wFB4cF77bRu+TEgP
      4XVM3BJVfD4CDz1I3ze/Raw5fZ5ipwtHfT1FD31s1t0b5iKjzwCtAy3zfq8syQS8xRztOERf
      sIewHuL1y/vpC/ZQkldKNB6hyBPAsix+17QXy7JYGljGhf7z/HvTC9SXzjxx7tX0BrsJRic/
      FVYKCyn94qMTTzITdHrPeIpC/t13UfroXyTl4IcMDoBpmgvq7WlaJvtbX6ahdBU1RUspcPtp
      KF2J311IbaAOE5OV5avxOrzcvea+iSGPlkU4HiFu6gvq3GaYBn3Bnim/l91u/B98gNJHP//W
      5K25Sq2soOQzn8b/wQeQPQu/2J1JxgYgHA8Tjc9/bIEsyWyo2ky+Mx8JCVXWKHD5cWtuLMvk
      4kArIBHSQ+w59yyGGad/vI+tNTvYufIeOkfaF1T/UGhoxtecDQ2UfvlL+Hbdm3sTbqkq+Xfe
      QdlX/hL3po0Jbe9PJ2M7ww2M9/PZX32caDy5wxyT5SPbHuE/Lb/tqn+nd3Yy/LPHCR86nN3j
      ChQF96ZNFOy6F8fS1K1MlLFfLxP9fjIyuwCzPntplZUU/9knCB87xsiT/w/94sXkFmYDbdEi
      Cnbvwr15M5KW2kMyYwMw0QbP3EEmLnX2F7qSquLevBn3unWEjx5j9NdPEbt4EYz07fx3VbKM
      VrMY386deLZvQ9I0W8rI2AD4XD4UaQHTGSKxvmoTJXmlNPacpra4njxHPud6z9Lcf4664uUs
      KapFVTQu9J2npmgp3WOdBKNB6oqXc2GgidaBC/Pev8cxt16hkiSBw4Fn6xbcmzcROXWa4N69
      RE6exIokb5x1wmka7o0b8F5/He6NG2078N+UsQFwqi48Du+8H4RZWJztOUXniJ88Zz77mvey
      onQVPWNdADT3n6dzpJ2lgTouDrUwFB5iWXE9Hkceh9tfZ3X5ugUFIOCdfxcISVVxb1iPa91a
      9M5OwgcOMv7Kq8T7+yEen/d2k0aWUQoLybvlZjzbt6OWl007S5sdMjYAABW+SvrH++b9/mJv
      CV5nPk29jTgVJw7VyVj07QmtFhXW0DZ8CVmSqQ0sI6yHuDjYQkPpKnyu+U8R71ScFLoXvrSS
      JMs4qqtx3F+Nb9d9xFpaCL3+BpETJ9Db2u1tImkaanEA19q1uDdvnliU2um0r54ZZHQAaovr
      Odl1fF7vVWWNHUtvZCg0SEQPo8ka7cOXAYlq/yK6RjrwOvIYjYywtmI9BW4/HkNnKDRAwBOg
      bejSvOsu8gZwz7EJdDWSLOOsq8NZV4d5/27inZ1ETp0meraRSGMj1vjCZ+C4ag1uN84VK3Ct
      aMC1bh1KSfEVJ6VKBxl7GxQmelZ+bc9XErpNh+Kk2r8oqQPrb6i9hUeu/2TStv9ulmkS7+4h
      dqEZvb0Dvbsbvb0DKxzGisUww+HZnS0UBcnhQHa7kTxu1EAx2uJFOJYswVG7FK2iIvkfJsEy
      +wwQWIbfXchweOaHSnMVM6JJPfglJFaWp3ZJJUmW0Sor0CrfPkCteBxzfBwzHMEcD2KFw5jR
      GFYohKXrb79ZUZCcDhSfD8npRHa5kPPykD0e2y9gEyGjA+B15LGuciMvXXjR7lJmrcDtZ0Pl
      JrvLQFJVlIIClIICIHe7Y2dsVwiYuDW4tWYH8gJuh6bahqrN+D1ibeF0kTlHzgzWVmxgSVFm
      rM+lyiq3r7zL7jKEd8j4AKiKyvvW3m93GbOyfckNVPtzu5dnusn4AABsqr6WlWWr7S7jitya
      m50r786o5louyIp/DUVW+MNrPoLXkb73nN+39n5qilLXy1GYnawIAMDSQC3vW7vb7jKmtbx0
      JbevuHvO0/YJyZc1AQDYufIerlt6o91lTFLhq+LB7R/HoTrsLkWYRlYFQJEVPrTlQdZWbLC7
      FADynT4euu4TVBZU2V2KMIOsCgCA15nHf77+U6woXWVrHX53IR+/4TMsL5n/4Hkh+TK6L9CV
      hPUwPzj4v3m1dR+mldqhhIv8NTx83SdZGsiM5xO5LGsDAKAbOnvOPcvjR39MzEj+6u0SEhuq
      N/OnWx9eUH9/IXWyOgAwsXhG68AFfnL4B5zrPZO0s0HAU8y9697PjctuRVMyv5NYrsj6ALxJ
      N3ReadnHb878io6RtoRtt9BdxK3L38st9b9HkSeQsO0KqZEzAXhTRA9zvq+R5xqf4XzvWUKx
      0Jxnl9YUB9X+RWxfcgM31N6Mz1Ug7vFnqJwLwDuNhIc5032KC/3nuTDQxEh4mPHYOJF4mLgR
      R5VVVEXFrXnwuwsp91VQV9zAyrI1LC6sEQd9FsjpALyTYRqE9RDReBTd0DEsA0VSUGQZTXHi
      1tw41fQb0yosjAiAkNOy7kGYIMyFCICQ00QAhJwmAiDkNBEAIaeJAAg5TQRAyGkiAEJOEwEQ
      cpoIgJDTRACEnCYCIOQ0EQAhp4kACDlNBEDIaSIAQk4TARBymgiAkNNEAIScJgIg5DQRACGn
      iQAIOU0EQMhpIgBCThMBEHLa/wfWjfQJnamrZwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='9 AVG region wise' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWTElEQVR4nO3dWWxcV57f8e9day+u4iaKpChqp6x9seRxt8bt7h40JkiQIGkgDwMECfKW
      57wGeUiCPCQvAYIgCDKZBAgQzABBeqbbS0/b7m7ZkiVbkrVT3LciWVyqWNutu5w8yFbbkEuW
      KFaR5v1/AAEFVon1J3B/9557zrnnaEophRAhpW91AUJsJQmACDWzEV8SBAFKKYIgQNO0Rnyl
      EC+kIQH4+kGv63LREdvHBgIQMD85xmJJ5/jhQVTg8tnVT9l3/DS5qfuMLZY4e+E0uaU8bWmd
      xQL0dbehaRq+70sAxLayoaMx0dKBqSoArM1PsFJyKZdKLFd0Xj++m9GxOXK5PA8fjNLa1ryZ
      9QqxqTYQAJ10KoUG4Je49Wie1rhGbr1EJBrFTjYTOEUyEw9Y9SLELGOzaxZi02ygCeQyeu8+
      I48niCXT9PR0Mj81huUHOMuzfLwwSc+R00SsBO3JKiOTixwc6EBufcV2pL38QFhAuVjCCxSm
      HSUWsfA9D003CLwqFTcgkYjiewGGoeF5AaZlogGu62JZVl3+ECE2YgMB2DgJgNhupEtGhFpD
      xgG2E+Ws43z477e6DLFNhC8AXgX37l9tdRlim5AmkAg1CYAINQmACDUJgAg1CYAINQmACDUJ
      gAg1CYAINQmACDUJgAg1CYAINQmACDUJgAg1CYAINQmACLUNrQs0M/aIpbLJyaNDjN65ztRS
      gaFjp3AXRphYLHHm4llyizna0xoLRYOBnrbNr1yITbCBAGi0du4hNzkJQPfew/TszvJwfg3l
      27xxtpN7Y7OYnk92PsfBk6f5+mPHW74YtayFLb5mQwGIx+NPlzlxisvMrgQc3tvJyGQZM5pE
      VdfIzs+gNXURMXWUCgiCJ/88z9vUP+BlqS3+frG9bGhdoPs3b3J3dBIz2cLYjU9IduxmJhGn
      kp3lg+kx9p26QMRK0Nnk8XB8nsOD3Zi6jlJqy1eFCCwTZ0srENvJBpZFUXiuhwI0XYcgQAG6
      bqBpCj9QmKaBChSapqGUQtP1bbMuUFBcovhfLm9pDWL72FATyPz6QWx8c+nDr9a+1fQnjSRZ
      Dl1sZ9INKkJNAiBCTQIgQk0CIBoiV/ZZr/gESjG9WkUpRdVTzK655Cs+9+YrOF6AHygeLDgs
      5L2GjBlJAETdKaW4Mlbkg5Einq/47x+vslLyuT1b5n/fWONhxmE8W+X9BwU+eFRgZtXlV/fW
      yVeCutcmARB1V/UUuqbhB4pAwem+GLdnK2QLPj1NFroOu1JPOiSLVcUfH0xwtj/GfM6te20S
      AFF3szmPK2MlPp+uML3qkooaLK17xG0dy9DwAvj9WIljPVF8pchXAmbWXNLR+u8uFLr9AWQg
      rPHGl6t0JE00DaZXXWxTw3ED0jGDlaJPa8IgYetMLFfZ02LxN3fX6WuxeWMojl7ncSQJgAg1
      aQKJUAvd/gCisSpuQL4S0JEyyRY8Ck5Ab7PFWLaKrxRdaYuWuMHiusdy0aMjaVKsBrTEDSxD
      w9A1LKN+zSAJgKgbpRRfzFUYz1b5O6+l+fXDAsmITr7iU6oqxrNV9u0KODcQp1gNuDPnkIy4
      LK57dKZNUhGdU32xugZAmkCibjRN42x/nLakiaFrFJ2AqVWX0aUq5wZitCYMju+OAjDQatEa
      Nzg/EGPd8Vkr+ayWfH73uIgf1O82VQIgGsLU4R+fa+aH+xN0NVksrns0xwxs88khmCsHmAa0
      Jkz++RttDLbbVH2FrmsUq/UbEJMmkKibQCneuVfg8ZJDxNSouIpc2ednwynmch5HeyIESvF4
      sYptaJzpiwNQcAL6W21sUyOT90jY9TtPSzeoCDVpAolQkwCIUJMAiFCTAIhQkwCIUNtAABTF
      1QUeTcwDsJaZ4Mqnt3G8gOXZUa5cv4OvXJaX83hOiYXs2iaXLMTm2dDaoGtFj2oxB+ziwdgC
      w4Mt3B2ZxSuscXRPjDujC1jVKkvTy+zaf2LTixZis2wgAAa7d/eQy+cAh3iyjXRnG8FkhmRL
      mnRHFyxMkJmdRGvt51DCwvf9p0sjVqvVTf8jXoZy6/+Ukfj+2NAVIL+2Si6fZ72kU1nPMPEg
      T2RXD4XFcSYfrmK19NNlJUnoOaYW19nTkcIwjO0xEOZabG0ExXayoQCsZrOkkklyBYfhoweZ
      Xi5zeKCTSjPMrroc6munVHCIx3rJrVc2v2ohNolMhRChJt2gItQkACLUJAAi1CQAItQkACLU
      JAAi1CQAItQkACLUJAAi1CQAItRqzAXyGRubobo8xlp8kPNH+5G9HsVOVCMARa5euU65Mk+y
      yeHM0X5ZQEjsSDWO6xT7drmsRM8Si8ao/zYFQmyNGgEoM760SGA1U7LyBCAhEDtSjQDYtDel
      +PjaDY5c/pMddaes2Skib/+rrS6jpt+Pfci9zJ2tLiM0agRAY8+BS8TM27itTY2tqM40K4o9
      /Pe3uoyaxgtL/H5taqvLCI2aN8HXr96k7GZJF0fwT+yTm2CxI9W8CX797BBe9AKgS/tf7Fg1
      AuBy5+bH3H64zsCZN9i3t1fGAcSOVCMAVapWCz2dBn6xQMMeGhaiwWoEIMEPL/+E9aUZvETP
      juoFEuLrahzbBd599wr9+/r4/OpnPG+DmokHN/not1fIrpeZHvmCD393lZLrMD+fxSmsMJ1Z
      qUvhQmyGGgFIMNDu8Rf/6//SsW/oOVcAj7kVhzNHu5maXGSxEHBuuIORsXlWV/M8evCY5pad
      1Y0qdpYaTSCdCz/6u5z1fQzDeM4NsEbSqHL11hjd/UfwqzEiqVbU5BSZ2Sn0lj0ctY1ttTTi
      ducH9dsQTjyrRgACPv3NX7Gi7SGdTPD62eEaIaiyXgpobYpTKJZR+XmuL8/QNnQc20rSFq/w
      eHqJ/X27ts3SiNudocsdVyPVCECJicUsrmOwFo9x/uxwjbGAGGcunKZY8Uin0wRuF0XHp7kp
      gdvShGVqNLl+HcsX4tXUvAc4f+IUflDgtfNnnzsQFoklaW1pxjR07GiclqYUGjq2baLpBtGI
      LWMIYtuqEYAqo/fHiba205KKyjiA2LFqBMDi2PkLJKvz/OUvPnhuN6gQ32VXsoPL+99msG2I
      Qx1HePvgn3Cw4zAAp3rPYhs2g21DvHXgJ/Q09RIxI1zc+ybn+l7H0Os7C+1bfrtibSXDjWuf
      0dR/mn+4f1AGwsQrObDrMDdnb+B6Lnta+vnbkXfxA5+EnSRuJ+hp6qXgFPhg5H3O9l2gKdrM
      46WHWIbN3tZBHmcf1a22bw1AbiWHHbFYnBml4mtcfv01aceLDfts5lPO7DlHwSkQtWK8tf8n
      TK6OY+gmmfwcXeluCk6BM33nmVqdIGJGWCuvYhkWLfGhutb2LSd3jWRKZ2qhwrHhIVYXluQe
      QLyS7nQPuUqOiBXB9assrGdYd9bZleigNd5GOtpMvpLj1uwN/MBjuZjlXN/rnOo9x+J6pq61
      fesVYDkzRyYzy8hokqMnTkoTSLySudwM6WgTa+U1LMMiGUlSqpb4ZPJ3OJ6DbdgopXADl5XS
      MhW3QsFZJ1ABuUp9dxn9lgDoHDj+Jj/Ol7j1aAEtleHgQKc0gcSGVbwKlcKTrbKqvkOxWvjG
      +1X/D7MDym4ZgNVyY+aQ1Ti5F3k4PU/USlHN56QJJHasGgFIcfbcD+lsKpFo75AmkNiwiBnh
      ZO8ZYlacZCTFD/a9xZGuY09eD73F7qY9AEStGCd7zxA1Y/S1DHC27wK2EaEj2VnX+p45toPA
      YXZyCsuy2Hfijzg62FXXAsTOZujmk94fM4qu6dyZv4Vt2Oxr28/nM9cZaB188jnNoFwtYZs2
      7YldxK0EA617GWgdxDbsutX3TAB0PcLu/i5mHt7h2tVPuP1wSppAYsNK1SKlahEApRRd6R7u
      zN8CoOo5uF+2/4vVwtP2/+25m0ysjBG14riBS29zX93qqzHMFuHSj39GUMny17+5X7cvFztf
      Z6qLU71nKLtlVksrtCXbaY618GjxPj8YeovJlXHaErtIR9K81nOCQrXAh49/jaZpTK2Oc77/
      ItOrk3Wrr8Y+wQ6/f+c9ZtbWad1zjB9drDUd+uXIdOjv9t8++c+8/+hXW11GaNR8HmByfIy1
      wMRuK6FAukHFjlQjACaRZIpDPf00dbY3tiIhGqhGAByqpBgeHsaKJuTsL3asGl38JtEgx3vv
      vcf1L0alF0jsWDV7gX76D36OHyh0U57oEjtXzaUR7392jfnsAvNOG//kH70tIRA7Uo0mkKJS
      LlOuuniuK00gsWM9cwUIPIfH47NceOun+JU84wtFmQskdqxnju1qZYG7DzLouo5pBtz87M5z
      nwmeGbnFbz74kMxamYc3r/Le+3/LaqXMxMQ8xdV5RmeydSxfiFfzzBUgEuvCLr7Dn//PSbzi
      Cvtf/9PnLo04lVnnxIkTxGxFxkxy+VI/d0anwXHILjgcO3MapRRfDTgHsvLZcylpcDbUMwHQ
      DJuf/fyf4lZdNMPENJ7XAPJxSkUmRu/j0EQibqJbNsr3KK5lUdE0hq6h1JNlEZVS+L4slPU8
      KpAANFLNPcIs2wY85ueydPbUeiYgQndHivm1Au29vbiLj3j//VGOXrhE3orT3aJ4ODrHkaEe
      TF2XuUAvQJelERuqxmQ4hed5KOUyPZVlYF/fptwISwC+28jSQ+Zys9/yjuL/fHGz4fXsdDVn
      g/7ln/8PqobJzEyG83/6Z7x5tOeVv0wCsHFKKf7lO7/Y6jJ2nBondo+KSnLp0jm697Qz96h+
      87GF2Eo17gEs+ndFuXprnIt/9FPiiZbGViVEg9ScDDd4aD/Oygw37s3S0ZZsbFVCNEiNALg8
      uj+CFmtlaG+PzAMSO9YzAVBKEQQGx89foCttMjE5J6tDix3rmXsA15nnP/27/0qifz/e2jo/
      /xd/T3aKFzvWM1cA02rmzbfeoMn2mJ+b4O6DSRmcFztWjXEAUCqgWimzli+zq7NdBsK2mIwD
      1EfN7Tc0TScSS9AZSzSyHiEaSiaeiFCr7wZMQnxp9v4DMiOPaevtxY7H6Dqwn/zCAnYszoOP
      fktTVycDp07y+JNrOIUC+86fJdFS/wFYuQKIxlCKY2+/xcCpE6wvZUEpyusFXMehc/8Qpm2z
      Mj1NU8cu9l98nflHI9S4Pd1UcgUQDVHOr3P7V+/S3t//9GfK90Epxq7foKWri0giQTSVwo5F
      UQ16cEoCIBpCN3QiiQRWNEIkHuP2u+/jV10OvfkGe0+dRNM04k1NjF77FN006dg7gKbVfw5C
      zW7QepBu0I37vneDeq6L5zgYpokZiVAtlTBMC8O2UF8+LajrOp7rEvg+dizWkADIFUA0hGlZ
      mF87+UUSf+he14w/zDWwIpGG1iU3wSLUJACibpRSLE1MMvbpdQBm793n1i/foZzPk3n8mJt/
      8ytKuRwAC6Nj3Hnv15Ryee6892sWHo+yNp/BKZXqWqMEQNRVoqUZNA3f8yisrLL3zGmyk1Ms
      T05z7Mc/IppKARBLpeg7cZzZe/eINTeRX1qisLKCHYvVtT4JgKibr3p2NE1HBQF2LEYkHsN1
      HNYyGW7+4pfM3r0HgFMqMXLl4yfdnwo0XWdlZpabf/1LPMepW41yEyzqRinFzN17zNy9Syyd
      ori6yoOPfkfP4UM4xRKB76OUIpdZQDcMdNNk1969RJMJcguLuBXn6e+pl1fuBlXK5+EXd+g5
      cIRyZpSRTJlzZ4+ytlykJWWytO7R0/FkSFu6QTfu+9gNqpR6cqB7HqZto1smXqVCJJkk8Dyq
      5TKRROJpEHzPIxKPPx0EC3wf3/Pq2iX6yleA9cVpxueWaN5dZGa5zIl9Ce6PZrA8j+zsMt2H
      Tm5GneJ7SNM0oslvzib+qivUsCxiX77Wv+wG/aoL9KtuUd0wMO367REMrxoA5TI6s8pgbzue
      5xNPJkm0dcHcBJnZSbSWPg5HTXzfJwieLI9YrVY3qfRwkYeS6uPVAlAt4zglpsZn2OXHMYuL
      3C8tEOk4SJeVpMkuMJ5ZZW93C4ZhSBPoFTRwwD5UXi0AkTQXLl7CKZfQ7ShesZ1swWN3TytO
      a5qobVAoyxlfbF+b0gsUicUBsNKt7Ek/+Vks9qQdl0pKR5PYvmQcQISaBECEmgRAhJoEQISa
      BECEmgRAhJo8Evk9oZTC8bwX+uzSf/iPVL64U+eKdgbppP+e0DSN6AuePCK+j3LdOle0M0gT
      SISaBECEmgRAhJoEQISaBECEmgRAhJoEQDSE3tRE9Ngw1kA/RmsrevLJ1rvm7h4028bevx+z
      owMAo72dyMGDYNR/dzoJgGgIs6sTf71AsJbD6usjcvgwmCbJy5fRm5sxWluwh/ZhtLYSHR5G
      uVViJ0/UvS4JgGgI3baJHj2CtXcAPBfle9j9/bhT00/fBzDa2nAePqA6No5m1H+cVgIgGiIo
      lSn85gMqn99EKfAXl7D3DeKvrACgp1MQKLzMPHZ/P3oyAXr9D0+ZCiEaIigVSVy6iJfN4k5P
      E+TXQdcJ1tcJnAqlj68++aACd2GR6MlTlK9dq3tdEgDREN58hsJ85hs/c6emnr72S+Wnr4NC
      AXd8vCF1SRNIhNorXwHG791gcrHA0PAp3MURxhdLnL14htxinra0xkJBZ6CnbTNqFd9jeiqF
      2d2NOzEOaNgDA7izswTFIug6Vl8f3twcRnsbQamM+nJZdFXnhdReOQAdfQfp7lnh/uwKeBaX
      TvfzYHQOMwjIzq+w/8SZbyzqJAs8hZCmET02jJfJEB0+hhaL4s7OPn3bHtyLnkhi9XQ/mcat
      6/grq99oItXLKwfALa8ylnU5PNjN40kHK54iqM6wODeF3rybqKmjVPB0eURX5qnX3bY7yShF
      UHGwDx7EHRvH7uxEj0apVF2CYhE/lyNy4ADV0VGMzk40gKYmzNOnKF29Br5ft9JeMQAeV69c
      Jd3Zy9xyinJ2ht/OjtN//BwRK0FH2uXRRIZDe7uwdF2eCGuQRmwu91IMAz0WpfjhR8TOnMZf
      W6Vy+wuiw8N4c3OYHR1UvriD1d9H6aPfEjl4AD2Vxs/n0RMJgny+bqW94iORiqrjECgwTAud
      AM9X2BGLwFfouoYfBBiGgYY8Etkoi//m31K5dXury/gGq7cXe/8QlZs3AY3oa69RvnULI5nE
      y2aJnTyJ8+A+QbGEHo+DZWH37aH82eewnfcHeBkSgMbYjgHYrqQbVISaBECEmgRAhJoEQISa
      BECEmgRAhJoEQISajAPsQP7qKkEDduMsjPxr/FJjpi1/F7vtB8R6/+yl/588D7ADGS0t1P9x
      ctCzBsoOGvBN381ojWJ1dr70/5MmkAg1CYAINQmACDUJgAg1CYAINQmACDUJgAg1CYAItU0M
      gKJaKbKylkcRUK26qMDHqcpD8GL72rSRYOW73LpxHYVP69Bxqst5WiIlyondDHY1b9bXiG3E
      Sg2jWy0v/PnbowtUqi+21WtrOsbQ7tYX/t1GfO8Lf/brNi0AvusTb+/m8FAnt+9MsTI7Rba9
      nzcG5eDfqeJ9/+ylPv8X/+8XzC8XXuizl4b3cPLypY2U9VI2rQmk6RqVUplKfgUtmqJr4DBN
      2jr5ijSBxPa1aQEwLJuOpM71e0vsH+ympaWJI8NHWFteZZst0yTEU/8fyhorI8u3KJoAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bar chart' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Line chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='confirmed vs death cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='logarithemic' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='map chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29SY9kWZoddu6bbJ58jMiorKysrKmrqhvsploSGlwIogQQAgQJEAgJGlbS
      RgsutWCv9CcEESC0FEGAgwQI4rSRFoI26pKaarK6itXVlZ2RERkR7uE2PrM3Xy6en2v3XXvP
      Bh/C3TzsAIGIcDd743e/+43nE1dXV9LzPJhYLBaQUgIA6vU6LMta+cxNIKWEEKL052EYIk3T
      0s8LIVCr1WDbduVxgyBQ17yPaDQapc/mQyAIAliWhTJZeMpwPM9Dq9Uq/DCKIgRBAAAQQqBe
      ryvB0xcChW3bl+b7PpIkgeu6aDabhe9NJpP8ghxH/SzLMnV8/vE8D67rrhyb1xJF0VbX8hhg
      WRZs20atVkOSJHeqaHaBlFI991qt9sHPfxtkWYYwDGHbNlzX3VmBOOYPpJRK+7daLbUQTM1K
      jW1qjSRJ1GJJ0xRpmsK2bXWBURQhDEMAy4e9WCyU5tfPY1mWuiEpJaSUlQIihECr1UKz2UQQ
      BOq6HzNc11XKpWxRfygIIeC6rlI4+wLu+kEQoFar3egZFhZAlmWYz+dKiPUD+r6vNBSFcrFY
      oFarFRZAGIZwHAdCCEgpMZvNIKVEv9+H67pK26VpislkAiEEOp2OOn8URZBSol6vK62Upilm
      sxna7fZaDSmEQJIkaoFZloUsy9TOwWM/FkRRhFqtpq7xocwfIH9WD7H73ARUhhR+vt+bPL/C
      AojjGGmaQgiBdrsN27ZhWRam06n6Xa1WQ6PRAJBrcF4MYdu22hn4YvkZIYT6LpCbPfw5dw3P
      81b8BNu20e12t7pBmhSu68K2bWRZpl5uo9FAFEWYz+c7P6j7gJQSk8kE9XodzWbzoS/nUUNK
      iTiO4ft+4Wc0p6t8w00oLADP8+B5nhLcMAxRq9WUdqJ55Lqusrfm8zmyLEOSJOh2u/A8D2ma
      IoqigkNb5i94nofFYoEgCAo+Ac/F7wkhttZOlmUVhEn/nmVZqNfrAIpO/kPDdPwPKCLLMvi+
      jziO1c8sy0Kr1bqR3a+jsAB4IF1z8qS6pvd9H51OR606mhxZlsFxnEI0g4KWZRnSNEUcxyvm
      VRiGyoxyHAdJkiAIAiUY3JF08+s2qNfryLLs0fgJVBY31WJPGWXCX6/X7yxgsOIEE5ZlwXVd
      +L6vIivUzFmWYTgcFj6vLwZu6bTThBDKL6DQ9Xq9ggaeTqfqvKZZBQDz+RztdvvWN2xe72MA
      d03gcV3XQ4M+KYXftm00m807DRhULgAAyman8AohkKYppJSYz+fwPA+O4yhbjD6DDtr8lmUh
      TVNlXvH4JqoiETd1cqpAoXvoXYAmG3fIwwLIQRnTlS/90rvE2gUAQIUwgdz0WSwWEEKg2Wxu
      TNyYTi+/x5uiw8vIkb7NAcsozn2A15YkCZIkuZdzbIM0TbFYLO50d3sq0N/9uiTobaAWAAUh
      TdNC4ksHtTCd4F3BpBodUdu20Wg0UKvVlL+h7w5cAHqi5imBpl4URYjj+EFzAY8NumKq1+sF
      RXqXcID8RYzHY2V30ynVyw9uI/h6BEi372lW6SFQE/cdm6bT/RDg7uo4zpNc4DcFlQJx1+Yv
      kWVZvgDopEZRBCGEipAIIRDH8dYxeDN+nySJOhaznlmWYTweA8iFz3VdtbrpYAO4s4jPJjyE
      zc2djQvvIWuAHhto+1P+XNe9F+VARbzxyPTEN9moi8UCSZKg3W4rTe/7vnJ8gXwrY1iUWVtq
      fX4+jmOVbOMxa7Ua4jhWCa370ggfAiwxiaJIlYDs673cF/SymF0ShHrkcN0zZZhd7QAsQTDB
      naFWqxXMIvOkcRyvhC1p7/u+D8uyVN0Po0h6hSeQx8KjKFLJqslkgiRJ1GdZ9MRz0o+4DWh+
      6Ym3D4HpdIpms4lutwvHcfamBOFDgJpZSolGo7HTs2HpDUtrqhDHMWazGQDAAlBaI8Moied5
      mE6nqqYnDENlqtBB9X0fQRAUaoDiOIbneSquz8/oGV49i8dwJGuF9EVFE4ra/y4rPrlQP5QW
      5qLj8zwI/xJ60ouKcJf3kqZpoaiPMkqYvgVwvQCoWXXQ9vJ9Xwl6EATwfV8lrViXQTtat9UW
      iwVms1nhYniBQggcHR0ps4rRJ6Da6WW1pxkdugssFosPWgnJ+3gspRiPBfouXxWJrAIDOdPp
      FFdXV8qfpSLNskxFGfXCQ4vlCTocx0Gz2VTmCrFYLADkAssCOZY2ACiULrRarZUXTBvedHD1
      KAwXiVnDQ2c6CAJEUYTxeHwnQsuM94cUxjAM0W63D5GfNdh1R9Z9TT3KyF0giiJMp1PlXLda
      LcqiVQht0vSxbbuwXfCCeEAKexRFagHoZott26peiFqb9u66pos4jhFFkcoYc7EsFgtlfunl
      sHeFD+mIBkGAxWJxyPpqyLJMVQebpss20JU4ZY69J6xkpok1m81g23ZeTySEQLfbRbPZVB1K
      +otheUNZfQ6w9Kh5EaYnTkem2+3CdV11QVUal6aNbdsFYdc/r3d/sfL0phqcx75pjuOm52SI
      +IAldCW0S4VslmWF6l7urHR00zRVEUkAqqw6iqLcB6CgMjLBFdRut9XC0M0W/UL13aBMCF3X
      VdEOZvfiOFbmFJAnOrhQuEr1Y5Ydlz+fTCaYzWY3doz1TjLufPcJNvrozUL7hvu4Zsobw+Jh
      GG6VoKTtTyUopVTanrKpWzUEZVEZ2ixL0AWdK0fvzd3UE2xetP4dXesxxAksHV+9/dG8yXUP
      AMgf2E00qm5m8Rncp1CmaaoSf6aP9ZjBxB1Nz7u+dobcW62WUhC+7288B3dT/f9cDMwfTSaT
      0mNZlrU+EeY4DrrdrrpAIH9p8/m8EM/XMZ1O0el0ShsVPM9TkSPWv3DFMzF2UyRJgvF4rHyP
      XWx6vtQ4jtXDvy+fgKbWPmR/qU31nm3LslQSjzU6d3UfVEK9Xg9pmhaUJH9vgj6saTKxTVLv
      ICtTkBvLoW3bVtGeMju87GeTyQSu66LT6ayNc+uZ4Hq9rv49m80KGobePOuS5vN56cOgAxUE
      wU4xZJ6n0WggDMN7E0zbttVLZZjvsS0C/b2yF1sXxDRNEYahKmLMsuxOzUbKnG3bSh7m87lq
      dS1DmWBbllUws8ugSiHSNFX1+sAqNQmdiaoTliXR9K4yblN0qPl9s/iNi6XVaqnwKitB9Riu
      67rK6zcFiCEvtnJuAynzVk9uwbzeuxZOsmQAuSO2KWP5EKBfxR2ZQQkmQZmtn0wmaDQamM1m
      8DzvXpOJtVpNmeIMkeuKtcxhZnBkHaSUcKIoUpqY20Wj0VAaSm8m12OtOnhBNGEcxykkMmie
      tNttDAYDhGGI2WwG3/dLzQE6iEC+GNirzN/V63UlTHpZBbGrZmVITG/iv094nrfCi/TQoMZn
      CQrDiPpzXywWyiS+vLzEl19+iV6vp/wmlrXvonio6NbtIuwEG41GueN6LZNMKPb7fQyHw4Kv
      yu9tMqsdbvnMwDHmHgSBEj7W8NOh0MFSAtd1sVgslLnECwWWGWPajdQofMC091jfw4dIR0jf
      Dum02ra9En3ije/KbsYIBI91nwuAyuUxCj/fAwC8ffsWaZqi0+kop10Xpslkgs8//xxCCLVw
      mOOhI7sNfN8vsDqY75Lvg3Vj3JVYMsFcU61WUyYPv0N2EN6XmfAFAEe3+Wiu0ObmTdGhYG0Q
      NQRtchay1ev1Asscb6LT6ahtlY4mBViP5bN2yKyQNIWFdSJ6SfFtHVdqo5skYbYByQJYL/WY
      sFgslJ3Njj8qHQYH4jgumIfn5+cAVn1Bfp55H3Nnp7lN5djtdpXc6d1xfLdMjDYajZXEZxRF
      GI1G6HQ6hQXAe6Llwu+bTjVgOMH8pS4AetiSmlI3OYIggG3bBW5J0/Gl6UTNx8wcj0shTpIE
      juMUaBnLmqAZ3221WipUq2vu2Wx2I66dMAwxn8/VDnMb0HykVnyMDi8A5cTW63WMx2PF+EHK
      zNlsBiEEer0egKWiKYsC8vknSYLRaIR2u71i3g6HQ1ULxuecJEnB2RYiJ0+gXPB8Vbb+eDxe
      2XG40OgHUKlutQDM/5s1+EmSKI3tuq5KYbNOh9s8EUWRclwty1L2vX5B3GkYHuX5yxxanodN
      0jrrm74w6UBvw3fJHUDPPN9UYBmK3YdKT2p73/fh+z56vZ5qVAJyH4zvl6CPZ5Yem1E7+hN6
      WFovZuT7nkwmBeE2gy5mrN8E350Olt0wAVvlEFcaamVO6Xw+LzwIMkPoF0f7jHY/dwtyBunx
      ZNPOI8ejvq2yLkjXyLwx3iQjP9xKCUYt+Ll1Aq1HDW4b2mP2fB/AaM9kMlG7rW4BcMdmFE93
      MLfBfD5Ho9FQBYeWZaHf7ytfczqd3ovPpScb16H0LTHqYtp3ZTsEC9SqwNg8L4bVeLrJwkXC
      ij39d2VNOI1Go6Bh9Zs0P8uw3qZ6IWpC/vumL0U/zj5Ar5OhojJhmhdUiPT3mMXl78rOwc/p
      mdpNsnNTsNxkG7p8dWc0c2izkfiWtfplZQ+7wnRszWNxe6RDZNt2KSGuvnOQ69M8lhklYmda
      VcEbBfe2L+S22l83v+7bZ2BoU2ems20biZRwru1uAAVeKGCZZWX7Kk1Nz/NWhJrfpU0upcRo
      NFq5Xx6XPzOhn7sK9Lc8z8NsNtuqWtgBci1Lp41CSLImNr/sim1eXlUCrd1uK6d6nTDpSTr9
      QfIYfLm8x3WhOf0B30T4bNtGq9XaWvszusHAgF5eHgSBssXvE6zkZVILAFIAf3z5Fv/m+Sel
      5QV8xozL078KggDdbhftdluFHWn2hmGIyWRSUErAash5kyWhX0cZaApXhTzL4ADLoRKNRkNl
      /qj1b0rcukmAdDOI1CDUKIwsbdKk3HrNrDAXTqvVUuG0TSSqXPi73C+vG8izldsKrMl3qder
      80WTiOA+fQmdf5W5E0tK/P7ZcxWRabfbaLVaina+LOoDLCM19M1oQk+nU+UP3mV2vSpIURUt
      qoJ6Y6Yw6eWoN9GIm6Io+sOj3UnSXG5dZeYKi/HoUJdVn/LnpM4ms8Q6MMTLjOImTc4FdhMt
      zXMx7EolQBOM9UxMQt4HGDkxcy7Mg2RZBs/zVNibfLC6Zi3zF8ypPmZPLv/e1c/SZfCu/AYp
      NVoU0p9QgG47tKEqpFp2PDpEpGZnm2aSJCvc7wyBlvUx65jP56rAblsh1XeiTaDZeBvosfRJ
      HCHKUpzWm+q535cJJKVUpLPz+XxlRBah35/e91F1TC5eLuoyNreqgMo211z2vdvKp2KG02Op
      67KwZaji8Cy7SXP162aLTpDFRZFlWYGYi7TYDKuVJcK4iH3fVw7bNqAPwnzAph3spg+fwq1n
      N3teTT0X+hP3tQAYjaMPYO4yOjkZPz8ajVbeMUPgvE76NY7jqFqvu3Tkq+QJ2E5OzR1ESpmH
      QU1bztxuNq3WXUsHzGRTu91WI5QYRbAsSyVQptNpwUxiSQFHLunmjXm9u/YY8FibHuhdhTrZ
      nM2MeK1WQ6/Xu5dpjdTQzLpOp9MC47L+7JjsovCbTSf0V/TgAY9JRgZ+9r6g+5FmSH1TxLGw
      A6yzx3bRdDe5aVImEnoVqj6JRj+2eXO0U1nH0u12tzKTqq5H5+svw12ZJ3pzDMlx78vpZSiY
      ji8z7Kb2lzKvtu12u+o7pmXAd8D6G1ZlAksf7UPAjCBVCbr+O7PWy6qy801aEh1CCNUQsU0M
      twr6vDH9XCyxYEhrG5NML79gIdRNoijbEDJxB7orMH5938Kvd/Lx5ybq9boKwbLziwgB+HLp
      GzLSo/cMfCiYSrtKjjc5z5Vv0fwwm1RYtkxH9aY3va5jTNcmej06sCyeY+sijyVE3tzO5gnf
      9wuaaReQCrJqF3joWbq77Mp0eKmV+T1WfuoQIi96q1qINcdGAw7S6x2BwZJNPd33gW2c4Sqz
      R//5VmqMESEmx+I4XqE5rLqIKmyjnfXdgS/ddHqpsSnsruui1+vdqqSZ98oS7n2GHgzQ6W2o
      uXUwEVqVdZVxAl0lzGYzVSUK3L4k/TaoSpSV7Xb67y3TmTG/yOgMY/Lz+bx0wuIuW6E+A3hb
      6C/HPAdr0PWFuE0ibR30ZI6ZZX5o7CJkZuz9V+OhugdzAZgl21XnkTKvr+r3+xgMBveWq9iE
      soWqvy/z3engz1UY1PyFbmPp7ZCbYuTbaIFd+nVN6E0N+jHYOWbuLLcJVersxAxX7hs1u/6+
      0jTFD/pHhQSnDioxnZSsDOyfJn9su91WSbUPYf7okZ51wl32PXNH2OgDUOh3CSeuM4loptwU
      JtWFbholSbKS1NHj1LuCaX2aWpyRvE+oSmYx36AjSRIMh0P0ej31nlj0RkfdcRz0ej1Fbsbf
      fUiYIU++H0Z41vki/Dz/3koy9F3Bsiy4IgWEhThbHz4tC03dVnvq/cLrohn8+Xg8vnVhmRBC
      ZZX3pc6fYC+EqZ1ns1mpM8/qX+7SFHZd6+ps3tPp9Mb1YreBlMv2Sl0eNu0MQHEncNblAMoO
      YFkW7F/8faDWRfr5Xyv05PLgZTaZeeKb3rTZlFP2GYLmEqdQ3gb0Kx4bNgUgGFbWIz6u66pi
      O/Od0N/j8eg4z+dzQAgI5IwQ61gtPnQ0yFwA24Cfc6jVt13FWZYh+62/DikE0ng3m4825tXV
      Fbrd7o2ynZtMsfF4rNr09KEeu04beeygBmTJ8aYXT+XV6XQKDSP6AqjX6yuhaSbO0jTFRRig
      69XQbrfXvvddF0CZYtxWWZqOrukYlwVr9J2iUA26zQnTNMXCWCu6XbXNi2D3/6YSZRPM8o7H
      48qFEMcxRqNRIYrFAq2b5gUeG1hrP51O4TjOWoIt5kfoz/CZk8ZGf+dMxumalAWCV1dX8KII
      juNicd26ugll4ciqz5UltjZ9T/9cWXRwHVQYfZcvrTvYroRIfIm7Tnopo8jjzqJPozG3Rg7c
      ewqgEuEffRJPGUgsxX5fnYJGhxBFxg4WzUkp0Wy30Wy1MBqNKqkpeQz931U5BVoeekh2kzln
      nkNfOPpwjHXhTxN3ls/fxf4Cck09HA4BLJnStrXTt43E6BEBXuNTgD68hKUim8w7Kh0O6CPt
      id7xR7IBPjMSpCVJgmGwgGc7GAwGhR3WxKaMbJmpU/a3/m/9O1X3abKW6zvKusTYSh6g7CbW
      CY45PGOXRaDzAbGlbl2OoMrL3+QU83gsONt3M8hkv9i2NMNfLPD1bIrPtfAmsKSGNJ/NaDRS
      WeRms4ko8CGvqwF831el6VVaHlgNgpSZLHqESYdpHZR93/yuKSP6+zeVtJRyyQxnYlvNWRXu
      3BY8NstuWcRWFnERQijbd1fnWwgB3/e35gl6zGCyilxLpJPZFKXyHAfnrbZygBki5vM237kq
      y7YshGmKumXh4uICnU5HLYJNVO/mezJNZT3axP+vk8kyQQeg6HN0064sBG8uilKbY1fhMr+z
      iy9gnouzwOiQUTMBy7qWm0yD4XkYt96VyPUxQMqcBWM4HKqpOzRt9LBmGYTI+V9Hl5eoP3uG
      er2O8/Nzldk2BY+KZj6fo9PrIcxSeNeFkCTDrdfrmE6nN1Z+ZX6B+f8queLvyAwH5CHcyWSi
      phzpz03/nr57bF0NSjvTND2qTJFtHkiVp8+ZT/wMF8B4PF5bilEVTtPPQRIoy7JwdHS0N5Ma
      KegvX75Uoc9+vw/P8zAej5XSWBda7vf7kFIWaOq5m3ARsQ319evXihNUCIF6rYbJbIajoyP1
      LKvoHnWzRO8WXGdam4vQXFSk26fjz5bOTqeD4+Pjwmffv3+PXq+n5heMx2NF2msGC5wyIaxy
      PsyLMhue9RvQt5lms1lZXly2HerQv2NOrtwEboVlO5oeGn2MCS4TUuYFaL1eb6VXmtSQvu9X
      LgCyY1C5sN2UTBx6mUSSJIotGwAuLi6QZRl6vV6+WAB4111s7XZbmVK64FfZ62UoM1V4z8CS
      5ePLL7/E6ekparWa6iA0Qfbxd+/eqe5Bnb3QlNGNPoAp0PqF6juC/nmzwpTOlVnDU3bzOqj1
      yChtMgCXXa+OskEe+nVxEg2p+h4zhMgz0eM4QpylOL0WdJ37iPVQ1Mx8F/P5HFdXV4Xycj3U
      ybIIXWsDy+fHxiWWVfz58D2+2xtAXIeX+Vm9AtcU6LISFvNz+v91+eBC5+LvdDqlDi4/32w2
      0Ww2CwuIHKTsL1e/W/fi9YfB/5c5IfqDK/PoOQTBDGHpi4v/1mk59HyBeX4T+jGqYsBmdADY
      bRznQyNNU/RcD2fN5aR5s7KTNJBAnsX9l6++RqB1dumcqvy/uav6aYLLMCicg8ouSRL8oDeA
      rT0/NteQYsUU/rL/m/Jioiy6A+SLoMzvLPu//r45J0CnaRRC5CYQoyv6gaSUpau56gT6z8zQ
      KAdj8GGXCWvVOajBaAOWCXbVAyn7nP5QWeG4D6CgeZ6nHHidQhxYPkvdXs6kRJamajL9//36
      a7zxZ/gPvvt9OFhmyvXn0nZctBwXmbZL6JE3+k36Dl+r1ZStbWKTsxvHcZ5p9jw18AIohtin
      02mpqbpL41O73VZDHLn4HJ6Ii6BKc+pYZxbpdp9OuhSGIer1+gpjwCbTQ8plFndT807V983/
      s3xA16CPHXR6dXAxMAQohFCJrDdv3iARAifNJvxpTmQrAbycjvHWnyFIE7QtWxESN5tNJbwm
      2bBOAsZIFB1kfbavZVkq17IJunIMw1B1ls1mM4RhiHa7rTLOJGumk37TknT2OVxcXCgOV/H6
      9WupO4uFjnnDZKFtadJnlwmkruV1TaEzNVQJ8yZNbjpXpgPO39H34O95P3yZ0+l0b0aWloH1
      +HplphBL2vH3SYSrxQKfujV1j6kl4Mcx+l4N796+Vba97g/pCTEppZrvpvdh87nqoWSyxwkh
      1HitsucqZV6gyMAIHWiC8whYu0W+VI7qus27ohJVyvT169eSTe4sH65yUOmNm9uO+bkqIdbt
      yW1s+XUw7XkzFU6NxnPSOdLJnt6/fw/XdVUiaJ+rRbnbxnGszBXLsiAsC19Nx3jR6iDV6vqB
      fFrLYDAoHGMymaBerxcCDmyL1RcZYVkWJlGE7jWrHwBlspD8V5+/xr/H47FqOd11kk8VTH9h
      E6SUcDg7ifOWzLi4rkHXOaH6BZgn0TUEtzfTVmQdil6MtQ7mzfI8tJNt21a7jTn9nWYVr4eE
      VLsO2H4soEblPekOviUlPmm2kVxrUV3YGo0Grq6ulBlFxTSGxPH1ux4Ohzg9PQVQ7Qsukhhd
      LfwqRF61m6Yprq6uCiFV/T2UUSfeFLZt42t/ihetDuSWgQ0hBBzXdVWR1PHxccFuL1tJOmW5
      aeLw36Zpox+PDtV4PIaUUm2ttGc7nQ6Gw2Flf2lZKI3HljKfDBjHsaphMRs8ACjyWSJN8+HP
      +5ITIBgg0BNEJvTYvvle+Axtx8FRu403b97g7OwMXcuCDWB6TVHPnnAhhNLcnOieZRlO643S
      kHMcx6V5CSmlqv26K4UjpcR5s41dj+YAwGAwWBmCoQttWYTIXCRVGrkMpNxmRlMfUD0cDlGv
      1xGG4UrWt+zlmbi8vFTFXeyGKotCUCuRzxKAiqHvC4TIWzWDICiMubVsG9Nrs4T3xt7dUGao
      CQuj0QhxHOP09BS/mU3wnWsS4fl8Dq/RgOW66Pf7GI1GyrSyrHy8Efs5GNgow3Q6Vc4zoctK
      v9/HeDxWlam3RZZlsADsGtRWUSAzHrxuZW5rp5ftEPy/lFKVQQNLNrejoyMMh0M1I8C8nnVR
      qtlspu5DJ9TSy6IZTmTGkNSMJk34PoBRHyoPDhX5v159hZ+9eY3/7Ld+G6e1vF6n0Wri19MJ
      jmIbjusVKOC/1z/C5XVkpNlswk9TpEmC6Jr3R09iATkDR7vdVhMlhRBqdgBDy7QsquSExXtX
      V1d48eJFQQ5uUuu1K6hsFTdomebbVdB5rHWgE802TD2+zNZFnaG53++rbHBVKQVfDksE9M8x
      lMZzhmGowom8b1ZW7ito6lFwvtXpYhQG6Fw7mXEcA/4cX3R7SKMYznUdVJqmgBD4cjLGaa+r
      KjyZX9CjSyEkgjRF7zrMOplMMBgM0O12C+FpfUFsmi7kOA5OT0/VImOIteoet3VutwHD4YX5
      ADrKEgzrnGA9FFkW2tSdaAqkGVKt1WqKfY7+AgV2sVgoRjhC5w1looRacbFYYDAYQEqpGN44
      8OEpgs8+yzJ8p9PD592+8gu63S6urq7QarXg1uu4DANMoxDfGxzDdRx8ZtsIkwSO7WCxCBAE
      Ac7PzwsEBA3HRd12ILWZBlwgNDWZj5BSFspezGsEckXIilZd+PVJnezpljKfNcAJRrcBq1xV
      3kT/RdUKqxJs8zNAtdljflbvPeUfxnjJSMxBzTRP9MzgaDSC67pq52IG0bZtVfXIhcBkzVNo
      hqmCXsxWVjHLUK9t2/gH/+rnmIQh/vqPfoLffv4CtVoNr1+/RrPVwpWX2/6266LebOLdu3c4
      Pz9Hdv0O0uus8tnZWWFKpM7qDUD1HPP3pl+pV64yiqVbA0mSFAiPOWfstn3dtASYeKvcAUzc
      teCYi0oPlbIElz2jTJowGpEkCQaDwco112o1VQsuRD5tnCwIT0Hw9YCEKVC0t/UInZ7XmFoC
      nhDwbBunjSayTOJqMS9kxqMowlGjAX84wiJNkAmhBqFz4DQnh5oRHO6wRLvdhuu6eP36tVI+
      evEko268RtNf0JNsWZapgSh6OyZ7E6rC77wuHRzUR9lzgM0NydsIj5lt3eZizP/zu/ybU0YY
      yZnP5zg7OwOAFe5/x3HQ7XYLtvxdxpkfA+I4xng8Xinook3OkuUIQMvzlG0dxzHqUQT3egf4
      T3/8O/k7v26Qr9VqGAwGmEwmmEwm8GsuOhKqCrfT6cCXEsfXwt/pdLaauVav1/Hs2TNcXV2p
      rDvfj+M4ShsLIZQjb1b7MmTNMLk+v5rNUfq1cJgfj8VdnxFHPT8EaD3Bt7WteLF7jyUAACAA
      SURBVJybaFq+RDJ9EbPZTI07zbJ8VFLZ0AsuvH3O5G6DNE3x7t071dyhmxydTievaxICkyhE
      +1obUzNTcMIwROeay3MymSitTlbter0OdzrFYjpVIdBerweZ5jVTHEtrMnfrtr0O9i1Mp1N8
      NZviE9vG+DrhSp+M9Us0WfW6sfF4DNd1cXl5iRcvXkDKvNgvSFPU63XMZjOlIJMkwdu3b3F2
      doY4jnF2doYEgKv5msPhsFARoKJAt8E2dn/Z583v6EOW+eCZTi+bRUDBvwnb9D7Ctm00jwao
      IX9Wlufh/3j5JXq1Gn7//BMAgADwabdXObCbi8bzPPT7fcznc0wmE1WJ6XkeBp0OkijC2dkZ
      hsMhLi8vUa/X8c1VXuczGAxUibuUUjGGA7nA0x+gmcsCt293e2q2AIdl04/ju/zkk08QxzF+
      9atfIYoifP755+raR6NRXqbRbGIaRzj28qpY3/cV3QsAVTdk2za+no7xaauj6omazaYym6Ss
      YIcGdlsUujO7zefKBBlYHc7G1V4VGmNiZt8Ym28KKSXmaYJusw3P9fDKn+Jnb17Ds238+PgU
      nsRanydJkoJZ4Louut2uirD5vq/Gyn4TLvDtZu7sOo5TGJzOOiEyy+nsdIvFAovFotAuqeY0
      Q+Ll3MeLbhfHx8f4cjrB0bWCYwkL+wpevHgBYOkr0mll8uy03lCh2iRJ8ObNG5V74Hgsy7LQ
      TTJcXFyg3W6j2+2u9LdYQHEs0K6Cv63pxG2y6vP8nTljgP/WM9B66O1jEX4gf0/n9SbevX2L
      LMvwrNXGv/XJt/AHLz5Fy3FVgq8qZl72fplDIC8TTabvdHp4tZhDuI6y+Smo0+l0hWv0XbDA
      /3fxVh2DwQq9+FFmEie2g8vLS4RhiE8azZXCSJaylF23lFJNqNed/jAMlW0fRRFms7z8++rq
      Cp1OB0dHRwUKF/2PMoE4FghYJZTaBP0C+f9tUPaSqtoY9eMygbWvxWs3BblAVcNIJvHvfOsz
      FQXStW7Zc2GPrAnuBnRKLcvC0WAA75p2haNPAajPmRG8r6cT/OLqEn/5/Hkh16OfI45jRNdM
      c+/fv8/DnJoCo2LjsHQ9EgQsG5hc11W+ASt+j4+P0Wg0cjNaCMQyU/QtegOP+VyU4dxoNFS3
      /V0JlX4c08zaNsNsfo4PnhnjjwkMJVJRUfCJTVEvOpoEE42My+sRNIag2YzEAAUVpf5usyzD
      750/x4+PT1dqyvTP0Gd49uyZ+lmZ7xaGoZpLzEQed3rKRKfTge/7yiRiEm02m6F/fIwwiVF3
      XEynU2U+lcl1gRy32WyqKsltBLQq/lol+JtQtUjKVu5tpszsK7jwGQrmz6jZ9cI004Skk0gN
      y92C5krZeCTG7/WpmAxFMiihWiqlRO1aQKm9GZmhcNZqNVVCAaBgvtBEYZM+hZbXTUZxLiKG
      Oy0rL+xjS2av14M/mUBmGd5cXwdbIHUzmvcoZrOZZEZPyryRgTdwk9qLbfyIsoYa/aXpL44P
      SgfbAz+GyE8ZWN5BE0AvVmN/A7W27j/5vq+0KUtCprMZpmGAs94qzQgXjp7f4c+485BljtND
      379/j9lspujoHcfBcDhEv99XfcwshdbfK7PUNPPMwAhL3NvttmIRPDk5KSTXrGuqlvfv3yNJ
      Ejx79gxCCPVZLibd3y1IEHcBPRx5k5fDY5kwGXx1p6TKOS47zlOP928CtTNNBN/3UavVlHBV
      ReVc10X2x/8c8vf/DfWzTEosKsjGuLuYAQgKK5FkKYI0RdPK5w+wvofCyQQYqQu5YPTMMQMg
      XGxc0Pyb13F1dQUAOD09LTizOkjjEgQB2u02Tk5O8OrVK7VLzmYzdLtdACXUiBw0d5OyVPNi
      qhaDmQdYV4NU9hJ15oCPEdT0LD7LsgyvX79WxX/A8plTmGiKtH7vd5XgCSHQbbfR0UoSyrBp
      R4+TFJMgQMvzEL98Cef0FPL6O0EQqMgQhTiKosJ4VZ7DvAb+jAtwsVjg/Px8uQjnc6DZRKKZ
      e4vFQnECUZELIfDpp58CyMOouq+0cte0MweDAY6OjnYSNDPMaZpRZoRCt1PLrsN88LyubSai
      PFXQlKENTseWDjLT/XRi+RxpovBZM5Kjf+6mGHS7+PzsDLZlIfM8iOvczeXlJYC8LkikKbJf
      /FKdS2f54H1VyQGvVzf3hBCQkymgyRvDo9xtWD9EzOdzNfiPx6xc9txmbdvGbDYrEC5tgnkj
      ZWEzfm7bPEKz2SzwuXyMYNM62yCBooDQhOAC0JUIt346mV999RWiKKpsWqGmJo/TOnCKjD+f
      4+vZDMPRSDXnqKScbcP+wfchpcRgMFDXYuZ8ysB7YlkFHe/s2TlSa8lil2WZmpbDkCjJkHk/
      k8lEnUtlgteh2+2qtDdrM/R4MsfsWJal6sO3caB3EeJWq7WW+fhjAEsKkiSBLSWy6xdPU5Xl
      IFXPSAihCt4AqI4uIDeTTLOSmV5gORuZ9Ts8nhlVkQDOzs6Us5ll+Ty4er2ey4ZlAdehz16v
      p7hOqQhpIpVdu17Fqfsl7ItmuFMvqGw2m6oph01V+vm2WgCO46Ber+fNz6enecvcddeQ/nsS
      LG2bnDI/ozs+5q7wVMqZb4s0TfO+11//GtYPf6js+sFgsNXz0RnX9IgPm09IRa9HVgAoxccw
      JE0u7iAsrRhGIU6GY4huB/K6pxjI/YDRaKQiPzq/FFns9B1MT6zqVkOtVsvp2q9lTIictcLz
      vLxnwWC4WywWalGkaYpWq6V6zj3Py5XGNg++2WwqsiImQli+SrAjiFsmWYfNhmeaVsBy2BsL
      sfjguaswpJem6V63LN4FVJdcliH74guEvo8kSVZIpTYhDENFc6KD0SRd+Mzz82+9cwuA+ndH
      WMDRAJltw9WUGBcWG1pc14UDYHBNjsCwLjPRQHkA5erqCkdHR0omeF7dqeX10/mmrHHRHR0d
      KbbrMAy3WwCsCZ9OpyoDq88H5kW2221VLttut1WsmpqHDdxmVs90eBmjbjabeP/+varu+1hB
      ZRDHsYqxM85eJvxCCLy8mOHT09VxpuyxrgpuVJmvbIRZp4iyLMOEdIlGjsa2bWX7R1GEtuPA
      eXcB5/xc8UExhMt7MJOhg8FAjWaybRvtVgtiPocQFlKxFP7omgyYtC18TtxtSL9j29Z2C4D2
      H733TqejSlz50PRFQDQaDRVzJY+MyfSwTnuxWZ0r/mMMfTIxyTIVdkFtQs0tf1YkHChDWUJy
      W9i2jZOTE9W7UQVdPqzPv6NkgDQ5Jtu1DoY3syzLS5qzDIv/5X+F91f/XYjvfU+Z4XpbrHkc
      1eDj+/BaXnUUyARtMMZWWTsOVGsNNmHQdLpJAoshrX0hsb1LkIRWL19gE8s6SClx2quXvpO1
      3EfzObJf/nLjdQkAoqRokWUT24IhXZrNvV5PmUg6U58uxPrUe2lZaPw3/zXs739fBQkGg0GB
      Qn3l2q/luNfroeW1dlsAzWYTvV4PYRgqTs1NWqPT6WAymagM3q5g84LuIN80S71PyLJMFaJN
      JhNMp1PEcYx+vw/f9xVjwq6Ioqh6ATSbsH74w80HSRKkP//TgmCyl5uh822Rpilmf/ZrTH7+
      c4RhqGSMylUPgNBX0JNoiRBIrqND+vBvPaNcBsrTTipZCKEmE9LJ1Zujq0JYvV6v1PHaBpa1
      nOW18GeYvfyTD0Kc9NAgczIH+nU6HQwGA9RqNcVz/8033+w84IMKqcxM2br+y3Vh//QnK58l
      e0eVvybSFOLa0S78/OQYyS9+ifS6RIJ8UWxf7PV66PV6aDQaePbsGY6Pj9Hr9dDv91UETMqc
      OoULoPT8mpyqcpzNd7t6kH6/r+zIZrOp6ip4YsdxUEMIz126GDdtXNETOxAC0nr6BXCkHtSh
      hwfZ/P7s2bOV5pRNoIBeXV3duA9cSokyEaNpxhCjuaDSX/85Fv/z31ktjXEcuP/+v4cYwPQv
      /gKTP/szzGYzNcOBoVMmQ7nLMPNNhTCbzVQNkn4OIQSm8Rj/8uL/R5gt/dYsy2D/4R/+4X+/
      KzcjL4j/1uvUhRDwkjHsf/w3IBwPOPkRpJSVPapVkDInxtJ7gV3XQ617+qRLIaTMe2wZ5vN9
      f4ULh5GOWq1WIAPeVsnorNiLxQLj8VhFThjTN4/DZOg680afV0waFXaEAYA1GMD9rR8D3mok
      Scqc8sRuNGDV6wiuB20w0LLunXNxkDnC/Jxt2/jbf/Q/4J/86n8DAPzo9Cdq57yxOjWjOa1W
      C0EQ5A6N24H80X8EefqTQmx3F+jZQSZcaILp2cinBr25O47jlbJhACoax3/z5Y/HYxVmLgPL
      IEhJyPNNp1O1i5OcqtlsFkKeXCxVJehsmKEzy+/r1anSsoBWE6gwlZk40wmLmRda1/9Bx9bk
      ti3kqewaBAS6tV7hM4V+gNtiNBphPp+rrYlaHFgyQpfdRBAEKglDujzevH4zzFiK4ApWvYdW
      d1CaR9hXSCnx5s2bQlNSVeXr+/fvcXx8vPJ90pebQydYKk0aEh1sImcdDUOu+vQWFpJV5QH0
      LCxLH+I4VtQqu7wjRnR4PZ7nbcUIx1nHDJ2zaV8IgSgL8dZ/g0/a34JMtUaru1oAXKmku+AJ
      9L+73e7Ki4miCO/fv1dOjF7PUXYOaiLbttWqj1/9McT5T2GFI9jt070nxDJDnWGc4e1ojs/O
      OkopTCaTtWUnl5eXqNVqimtHn56+YoNfLxxzBhmQa+PLy0s4joOTk5OthJi8Rfqx17FvU7kx
      w5xlGQaeB/n6Ndp/6S/daJDhYrHIlaV2TipkfbHemUcphFAhy+l0Wqgy5EVQy+vD2BjO46C0
      dQ84yzIsLn4DUeug2Xm23OKa+WAPOfwLSK+LTNsuuXvQad9kxz4GmArAcyyc9opTbvTnNF3k
      99ZpLLVzv9/HxcUFut1uIVJSBhaYlYGEWbvwqtI/YfkBS2nM70dRpCpbPc/DbDbD2dmZcmJr
      P/3pjUtg1plLwDJ5e6chFW5/+uTyOI7VimNMmy84yzK8efMG/X4fXUwgxPnmhyxsSCwLpfKy
      gB/kvaWf/9ulsd8wDBF+83Ng8hL1H/21R78AGOnRF3HDK6evz6NkFmRWFG4WKdJ2ViXHEFiE
      KZo1e+U4d4U4jvGb3/wGn332meordl0Xb9++VdEb+gdmIR+Z6pgQu+l1lckBcwOMTnmed7cL
      gCfRm7S5ysMwLHD+MHFCfh9nEZc6R+ZNtc6+o/6tY12tkBACsBzg238FwN2/8LtEEAR49eoV
      gKXta4ICnSRJLuiOgBDWyg6hs7MxnBhEKUZ+iGZtaYrO53PlOKcZ4AcRus31kUHBBVViToVh
      iMxpFXoWuCD1YR7mjs+CSDJZ3wZV8y74O5KC3WtQneaO53nKJOJLYfz6k3YKYQPv0h6O/TGS
      cI4oE+pB6BENvtRd4Xke8OyHCP7s/0T84i/D8443f+kB0R8cYTKPIZDXtjDzHgSB8m+YINNj
      +fQb6MDqgQiVLPJsNI6Kwk9/Csh7hP0wQbfpKSU1Go1wfn4OQFMe8zmyy0uIzz4rZOhJqBvM
      YzWph40xLKvnu41/9v9C/N7vKrng+Nq7AEP1+gwJXj8zzXceBdoFUkpcXl7Ci64gnQbiKIRn
      ZciSCBfhkuzo5OTkTs4XxzHmV98AyNA6/tajJdOdzWaYzQMMZyHOenU11HndDudfl0az5Jhs
      CMCyU8pUHDQRSCVCUEvqZLKDwWClUV23pfVstO/7eZnx9eJzHAfn5+eKMUIvU/Cu55K5rnsv
      DB/kF+K9896Oj4+L5LgPASEETk5OkKYDzIdv4ckFxmkfSeqi363DcVw07nphvvsTwGtjfvFz
      1L7/V28UXbhvcHjdN1cxTrp1lV/Rk1z8O0kSvHr1CicnJ+j1B7AsocqKa7VaYaIONXO9Xsdi
      sYAQ+WcprGULTM/k6ubMOnpLIO/g47OVUuKbb77B8+fP4TgO0mtWZ0ao7tMU5QIrYxskHrSu
      gLZh6+gZpDxH95p3Ug5/A8QOnN5qWK4MbHejw1f2UKMoArw2xPPfhZDpo9T+QG4Hz+dztOtA
      HCeF0VBxHGMwGCiNRpaERqOBV1dz9Ft5zdDl5aUyK7iDUnuzTp4IwxCXl5f45JNPVp4bM8Y6
      yiJJnFJJFm+zQWUwGODNq1c4e/4c/X7/g/pfZgTKlI9HUVijb8+tVgvv/LOcLfjaySt7YHQC
      gyBQ822ZrmezCD+n7Nb28+u0+ePlFO12u2g0Goiz93CdfI5Wu9uHbQnM/ZlqO2VVJ9nWep6F
      YDZEAKDT7cF1bNWcRLBPVhdi8n6qbK0h4EyCrZvm7vu+KoUpy02IJEH34gLOp58WTCd9+CG7
      xu4S9EHZTyyEUD4J8SgWgA5Snkcvf4Yo+xZc91ul9mEcxxgOhyo9z4cJ5BpJp/+bz+f5Qpp9
      g8xrAmte5kOD5R4vnuXc/EmSYBZbsC2BtlbExjbRNE0RBAGOjo7geR6urq7gShuXowhHjSUt
      iGXZyKQsRNqoQMjYZlIrjsdjHB8fKwHnQuAx+ZxJUMtWWdPnSC0L2fe+h+FwiHa7rSo+C2He
      e0peMjTPpBipUnjuR7cAuEqzZz/FdB4gHo3QrNkQTl05dHrZq+6YESzX1pEkCZzjn+xFa6Ue
      So6SDCJO0HQyZBkUowJHHwlRnNHrui5ckeC0bRU0+9CPEMUpzno1JcDT6RStVqswVxmA6v/m
      DC+WShwfH6smHWA5lYZNS5wqKYQAhIU4yeA5Qr232WymFpEe4+e139ezpP/EOinOpL7zRNhd
      wbZtNDs9SMtBlqWIv/4j2M9/B43OEV6/fq2mkLPTbDweFyalVyGKIgyHQzWb9rGaQUSz2UQY
      xZiHCcbjseqdJWgy2LYNYdmwhECt1UeYZbCSRaFjr990ADjL5vrryA079Ug3rocpISwISDUx
      Po5jFc4kSNE4HA5VQR0AhEmGsR/hXFtw7XZbLQQqMp3v6b7guq7qKUmSBBN/op7v4/QEkQty
      u91Gu91B/bt/BfX2QPHXAMXBfo7jYDQaYTweF5JtjE/rMWom5m7aUfUhIYRAt9NGw5E4PjlB
      IL0VZ5VlB+N5jKtZBM+x0PSclZIPNteEYYiLiwuMRiOVlCLLMrv8WLr+r15P8oV1bZbO5/PS
      fmL+nkV8AFB3BM57tcJ74s7GsDtZ7HYtx98VNH0YwXo5+RJhfK0wHyoPcFNkWYa3b98CKC/q
      mkwmqq7IdKqm0ynq9TradRfCdpFKKFruLMseLflWlmXw53O8fDtCx5Nqhi6wtON1wgGaT47j
      YDKZKMFMkmSl0QTIQ696IdyyCcUBsBzBqlOX87u6GTMej1WPQhn0Qj7mNvr9VVbq26KqZgpY
      tm6yZ+FRmkCbQLvftm1YSJHBVvXo/X5fdQYBKGRBhcjHifaQIc0EFnYfTjRE6nYxHE8xGAxU
      x9FjWgiWZaHdauGLb7mqvLjdbitBI6lVGfGAyYTGRZ4JF/M4RbtWtL/ZH0CtyZ2DTrdlWYrt
      TWcDZEEbq1QZkubz1+d20QfQ5w7cJaSUuBxfAlLipH9auD8O+SD2cgFQYztCwvqTv4P0t/9L
      JHLJKEdtxQknQRAgyzL0+/08LpxlyEQ+1MFKFpBOU0VTRqMRvvvd7z6qBQAsQ3qkHtTNGw6c
      qPoetTtLjofDIVzHQppJAMtmcrZicnHRyTZr8VlSHIYhvvrqKxWOrdfrirhKJ7paLBY4Pj7G
      0dGRWowcvHdfz3kRzlHeuGk8n30ygaTMB3iQ01IfqqDXzzPkxZDc5eWl4pMPgkAVQw2HQ0WW
      xAXDZuv7fDkPiSiKcDUcIUsT1bzEKSvdblexSG+jmSnoZ+fPkUmJcOGj0WgUMsic5NLvdiH/
      9BcQv/Uj2PdMcS81ZbjpHHuzA0gpcXFxoSjvAKieU2I+n6sZZ8xMzufzQkVlrVZTTTs8DqMT
      rHfhPNmniDRN8Yuvx/jJtwewrHzH41AL9uBua5aQY2geJvDDGA2xJK8N4ww111IlGBkA6yc/
      Vrb/fSqXXYom92IB6I3i/JvOln6jLL4iawXj3LqTpZsEVS+BWuspziGzLAs//ewIEkCr1Vbm
      FCNCu4Qjp9Mpzs/P4Xkuei0Pb95MleL46mKGL553C8+P1b2P6Zk+6AIwO8bWfS4MQ9StCI16
      iKB+jqurK/i+XxjioYfTXI2d2MSm83EGFZvNdX7TfUfOBhHjYhqjVXNVYogjlra9T8uy0Gq1
      FH+Rzhuapim+97yDLFsGIOgYPzY8aB6gqnDNBKkRhbAh0uX82KOjI9V1xu34rigUsyyD7/sY
      jUa4vLxUYzv3HfR5TjsuRLrkE+Iz3rYkwXEcfDVKFXEVFRGzwYp//5oQ+TEKP7AnJhBreoLU
      gY8TxNf0H+SDYXnvfD5fmT11G+iFdKT3YEKFDRf3ncS5a5Ct4eXLl0rrd7tdRFGkygO2gZTA
      s0EeHWLTCcsqxuOxYp+o1+sF9sDHhr1YAAzdUdj0lDuZwcIwVMVb94UwDFfKg9fRvTxGMIdA
      x5dmaBRFqpJzmwy5sASSdElexgACTcarqysMBoMbJRfDMIQ/D9Bq1u9953i0pRA60jSF53mK
      HlxHHMcYj8eQUuKLL76405qSbeaRzWYzjMdjRWG+D3AcB8+fP8ebN28wHo8xHo9Vicm25SFz
      38egAXXPZtkJ5zjf5H0kaYp/8ZsLJMn9P8+9yAOkaYrhcKjqUPSXtImw6abY1j/R0Wg0HvV2
      b+L169cqs8zFrvP3r4MQAr7vq3xJ2T2TzHdX0KlmrdB9Yi9MICaohsNhQctmWVZoFH9o7NsM
      g6Ojo4LJMxqNIKVUPcbU5FUNSWxWKts1mIu5SdjzQ3I37YUJBEBVKupb6i4Jj12ga8RdsG+h
      UjO822w2VZVsr9dDvV6vXNTz+Vz5Zvpz0hfDPkTN9mIHINjQTXuTTtd4PFZbMU0hljfs2ngt
      hEDNc2DNLwGZQDbPEaWbefPNIqt9AEugdVpzM6pVJsSsBWKpCUPEdKwJfZj3Y8Xe7ABA/sLM
      4XDNZlNFgcIwVDTf5IuvmodFmPar57mw//TvwfqH/znsf/hfwPrZ39rKv/gQKf67BgvsqtBo
      NFTDu2568plxB2bo2dwBoyjCxcUFgKVd/9h2hb1aAMByZA4ZqBuYo+umGAwGcBxHFbiRiJfD
      lddB/72dhRC/+kcQWQzIDOJX/zusaLpWsJvN5l6FQnVsGlrI5NZ4PMZkMsFiscBisViZJcwE
      22QywWg0Uv3aPP5k5uP/+flXiKKiQtIL5x4Ce2UCActdYD6fw7UFrH/2N4FgDPc/+buo1+uq
      qlNvhp7NZqp5e4WxQGMpAAAJG/A6yw/UepBOHTIpf0mu6+6t8LPEhHBcF1+9m+HTk2ZhHkMU
      RSq6xX5ranS2M7baXdTrnnr2ZsNM3XPxw0+PYdtFnRtfD8J4KOzdAgCWW7MUFuQP/kMgCZWt
      GcexKshiWI9dQJPJRCXOzOgFX1QCG9Yf/HfAH/2PQJZA/s5/hRQ2gHJn8L77We8TQRCo6lkp
      JQSAE42FmhyezWZTCTZr/31t1pcQAuNFhsnCR7/pwHU9/Or1GN9/sZzWaPYSA8ty6m63+2AZ
      9b3IA5SB/O965xeQD46gTWpqdwBqGso6ja2H4dgNVQXSkewjxuOxCipUmSG+7+fRN9vFZBGh
      U1uyK0dRpIZQsM1yNpvh6OgIUQrUnPwZHx8fV7av8vh6dv9DYi93AGDZy2s2apvl0SYYQVoX
      5twk9Dr20fQhdLrDdfeR05wIZNmyG4+jWh3HUfkEMoDHcQwBII7FCrs1d5XFYoEoitS5Hypa
      tLcLgBEMz/MQxzFms9kK4VLZAmg2m2oow22ztrqtu29g+yOZp4HilE9lEvKZZhn6zbz7jh15
      5+fnyvHlTAiaOfTBzFnSLBvRsUsR3l1jbxcAwVxAr9fDq1evSkfxFMhQHUeNDSKlSNkxze+V
      4bEyTG8DOrEk2AKWuyOjPGSRYJ5FSqlseT4327YVnynNmEajoVoezXdhJtb0iaMPgb1fAIRt
      24qbRjdxzMykHoeuEvBtt+PH1t20CzzPw2AwUNpcB3k7AeDZs2dIkgSe56kOOyqRP38zxRfP
      u4VRtpwbXaYY6ERLKZFJQFw35FdhHb3JXWE/1VcFGI8vS35xqw6CQFWQVj18PbqxDvtAs7gO
      5ihUQk9ykb7Etm202234vq8qPjm3jM+pVqutHXII5BpfQuCXX4/V4Iyq57xYLPAvfv1qpQT9
      LvGkFgA1f5kDy3Bbu91WlHxlWUk9y7luAejzivcVzKnQlxkvUkBUmyMMIdPfarjL+cHbsGiQ
      mQ4yw4+/3UeWZWt3ACEEPOd+RfTJmECkPmxYCUSzqWbGOo6jSiSKJQ9egZq77HhVYD/svpo/
      hBA5KzOnxtvKbISaPG/bNl69X+CT4xaydMmoNhqNVOKRPD+sIK2qHmXwAYAS/nX2f71ex/e/
      /exen/OT2QHSNEXyzT+H9Y/+WzRmv0Ecx2i320jTFI1GA61WC4tF3gPruTYG8r0a4sesp671
      y2LjbO/r9/t7V/hWBb0eqFO3ILPc9ufuIKXEoFODdS2D9A/o/5BIi79bpzjM321i3bhpVe4u
      eDI7AACg1gNOfgTpdeFaboGI1fM8BEFwPRC6B8fL6VJYLsFiNp1YF1gKAkOu+671y6APEzGR
      ZRlqNpAksQpj6tPmyb7HRVD1fBitm8/n6mePQYk8mQVg2zaco+8g+IO/mbObXTPG6WD4zvfn
      mGYO2nasJoYwkmFGHvr9/pMVfKKMCIsZWgBqfsB0OlWzvQjXddUAjU1mIWd2kdfpPnhBd8XD
      X8EdgQ+eFOiMW5fV/DSbTRXNIDe+lFJt+QAUl81TF35gmc/QFYZt28o3AKASZjpjHqkqkyRR
      tCjrnhWpbEjG9Rie65NZACTEpVOmp/kJLgam4+kA6hldfbHct/35WMCQsdV+GAAABHVJREFU
      J51YIL93moYUer3Ck4WHfN5sPtqEx5Y8fDILgMROvu+j1+sVQpxlcf1+v6/mirFqVK9LMT//
      1OF5HkajkdoFPc9TTBE6+Ey4e7ILbF9Dwk9iAbCunYMXTGfOjOkz8sHvmc3hQHl74FMFHVQg
      H4wNoJRoQD0fwZ0AhfLyfcSTWAAAFD1iWUy/6uW8f/9esR6YkZ9ut7t3Te63AbmChsPh2lh+
      EASI4CGKU5x0XJVU3Fc8HmPsDlBWAmFmdvmHg/Ymk0nhe3SSH7JL6aHAXU8Xftu2AbEsWPM8
      D3UrwXm//iQSgk9mATAbaaJM+Iler6cqGZkkazQae72l3wbMDOuIU+B/+qc/RxAv/SKaj09h
      l3wyC8Bs0gbyl+WIDDZWa4OklKh5LlrZBIPBQPUSV1Uyfiww773mWviP/+B7aHi5oDNi1uv1
      noSP9OTetLkIrNkrWP6blc8IIQApIeK8HJhZ4Y9R8+sw6/PjOMZJx0WSxKpJnj28T+FZPQkn
      mIVwZT9Pu9/hfwAsY95nZ2cAgKj3OWSWYTAYrLTvfYwgn38URSsVr3x2T0HwiSexAHRmZvPl
      cHyqCTKbUeg3lT9/LKAf8JBtih8Se28CSSmxWCxURee2IL8NM5Mfw8veFh+TMtj7BRCGoerw
      KqP2ZvdSGfaNzfmAu8feLwDyTa6L3HAR6MmuspDfAR8f9t4H0OvSqwqyKPgsweVM3I9lmz+g
      Gnu/APTirHXViI7j7NX0lgM+DPbaBGJ73iYTCFhN8BxwAPAEdoAkSVSPahk4TvVjrO05YDP2
      Xi1yTkDV4AXWrhxs/gPKsPcLIMsyNYytDFEU7c340gM+PPZ+AbBPVWcbINjpdTB/DqjCXi8A
      ncZ8Nput/P4Q7jxgE/Z6AdD8KYv/c6zqAQesw95GgdieR4pv3QewLAv9fn/vmzUOuH/s7Q5A
      FgghxEoegDQdBxywCXu7AHROy+l0ulLXwzGdBxywDnu7AGj/08E1fQAhxKOg3jvgcWNvJYQj
      fqIoWrH1hRDo9XqH8OdHhJtOk9nbHYA3GQTBCoPZUxheccBuYGPUrtjbHYD9qWYJhOu66HQ6
      h9j/RwbLsm5E0LW3O4BlWXBdF61WC+PxWP18E+222RhzwMeNvd0BWARHO5++QJZlldqf081J
      z33IEh+wtzsAozzk8SRd99XV1cogZh1cNAfhPwDY4x0AgNLiSZKoVscgCBAEQSVJ7iE7fICO
      vd0BAKgSCNKakNktiqKDjX/AVtjrBcBsMLPA8/kcaZpiPp9jNptVNsncNfTJ6gfsF/Z6AQD5
      LtBut9FsNtVOEAQB3r59qxbEfeNgWu0vxGw2k0+FEzPLMgRBoBzkQyb4gE3YayfYBJMhB/v/
      gG3xpBYAcQhvHrAt9t4HOOCA2+CwAA74qHFYAAd81DgsgAM+ahwWwAEfNQ4L4ICPGocFcMBH
      jcMCOOCjxmEBHPBR47AADviocVgAB3zUeJK1QNtAb44/zAn+eOFEUfTQ1/AgSJIEtm0fBP8j
      x78GCssmRNRICjgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='parameter for percentile' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
